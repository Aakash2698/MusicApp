{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/RightSidebar/RightSidebar.jsx\";\nimport React, { Component } from \"react\";\nimport Audio from \"../Audio/Audio\";\nimport \"./RightSidebar.scss\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { setMusicData, clearQueue, deleteQueueSong } from \"../../../Actions\";\nimport axios from \"axios\";\nimport ArtistDetails from \"../../ContentComponents/ArtistDetails/ArtistDetails\";\n\nclass RightSidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scrollTop: 0,\n      openRightSidebar: false,\n      rightSideAction: false,\n      positionIndex: 0,\n      scrollId: null,\n      queueData: []\n    };\n\n    this.handleDropdownChange = index => {\n      this.setState({\n        rightSideAction: !this.state.rightSideAction,\n        positionIndex: index\n      });\n    };\n\n    this.handleOpenQueue = () => {\n      this.setState({\n        openRightSidebar: !this.state.openRightSidebar\n      });\n    };\n\n    this.clearQueue = () => {\n      this.props.clearQueue();\n      window.setTimeout(() => {\n        this.handleOpenQueue();\n      }, 500);\n    };\n\n    this.getData = (songData, index) => {\n      {\n        this.getScrollLocations(index);\n        this.props.setMusicData(songData, index);\n      }\n    };\n\n    this.downloadSong = (id, songName) => {\n      const url = \"http://localhost:4000/songs/download/\" + id;\n      axios.get(url, {\n        responseType: \"blob\",\n        headers: {\n          Accept: \"*/*\",\n          \"Content-Type\": \"audio/mpeg\"\n        }\n      }).then(res => {\n        let url = window.URL.createObjectURL(res.data);\n        let a = document.createElement(\"a\");\n        a.href = res.config.url;\n        a.download = songName + \".mp3\";\n        a.click();\n      });\n      this.setState({\n        rightSideAction: !this.state.rightSideAction\n      });\n    };\n\n    this.queueDelete = id => {\n      this.props.deleteQueueSong(id);\n    };\n\n    this.getScrollLocations = id => {\n      let whatIDo = document.getElementById(id);\n      whatIDo && whatIDo.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"end\"\n      });\n    };\n\n    this.howItWorks = /*#__PURE__*/React.createRef();\n  }\n\n  // handleCloseQueue = () => {\n  //   this.setState({\n  //     openRightSidebar: false,\n  //   });\n  // };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeSongIndex) {\n      this.setState({\n        scrollId: nextProps.activeSongIndex,\n        queueData: nextProps.queueList\n      }, () => {\n        this.getScrollLocations(this.state.scrollId);\n      });\n    }\n  }\n\n  render() {\n    console.log(\"RENDER\", this.props.queueList);\n    const {\n      openRightSidebar,\n      topCharts,\n      rightSideAction,\n      positionIndex,\n      scrollTop\n    } = this.state;\n    let transform;\n    let sliceSongsIndex = this.props.queue;\n\n    if (positionIndex === 0) {\n      transform = \"translate3d(137px, 18px, 0px)\";\n    } else if (positionIndex === 1) {\n      transform = \"translate3d(137px, 83px, 0px)\";\n    } else if (positionIndex === 2) {\n      transform = \"translate3d(137px, 148px, 0px)\";\n    } else if (positionIndex === 3) {\n      transform = \"translate3d(137px, 213px, 0px)\";\n    } else if (positionIndex === 4) {\n      transform = \"translate3d(137px, 213px, 0px)\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !openRightSidebar ? \"minimize-sidebar right-sidebar\" : \"right-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-sidebar-header top-title-sidebar \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"85%\"\n          },\n          children: \"Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.clearQueue,\n          children: \" Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-sidebar-body ps ps--active-y\",\n        \"data-scrollable\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          style: {\n            flexDirection: \"column\"\n          },\n          children: this.props.queue && this.props.queue.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: this.props.activeSongIndex === data._id ? \"active-song custom-list--item list-group-item d-flex\" : \"custom-list--item list-group-item d-flex\",\n              id: data._id // onClick={(e) => this.getScrollLocations(data._id)}\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-dark custom-card--inline amplitude-song-container amplitude-play-pause amplitude-paused\",\n                onClick: e => this.getData(sliceSongsIndex, data._id),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-card--inline-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: data.songImage,\n                    alt: \"song-image\",\n                    className: \"card-img--radius-sm\",\n                    style: {\n                      height: \"40px\",\n                      width: \"40px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-card--inline-desc\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-truncate mb-0\",\n                    children: data.songName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-truncate text-muted font-sm\",\n                    children: data.artistName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"custom-card--labels d-flex ml-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"dropleft hide-remove\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-icon-only\",\n                    onClick: e => this.queueDelete(data._id),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"three-dot-action\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-times-circle\",\n                        style: {\n                          color: \"white\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"dropleft\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-icon-only\",\n                    onClick: e => this.downloadSong(data._id, data.songName),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"three-dot-action\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-download\",\n                        style: {\n                          color: \"white\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Audio, {\n        handleOpenQueue: this.handleOpenQueue,\n        fullWidth: this.props.fullWidth,\n        handleCloseQueue: this.handleCloseQueue,\n        queueData: this.state.queueData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst MapStateToProps = state => ({\n  currentPlay: state.home.playSong,\n  queue: state.home.queueSongs,\n  activeSongIndex: state.home.activeIndex,\n  queueList: state.home.queueSongs\n});\n\n_c = MapStateToProps;\nexport default connect(MapStateToProps, {\n  setMusicData,\n  clearQueue,\n  deleteQueueSong\n})(RightSidebar);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapStateToProps\");","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/RightSidebar/RightSidebar.jsx"],"names":["React","Component","Audio","ActionPopover","connect","setMusicData","clearQueue","deleteQueueSong","axios","ArtistDetails","RightSidebar","constructor","props","state","scrollTop","openRightSidebar","rightSideAction","positionIndex","scrollId","queueData","handleDropdownChange","index","setState","handleOpenQueue","window","setTimeout","getData","songData","getScrollLocations","downloadSong","id","songName","url","get","responseType","headers","Accept","then","res","URL","createObjectURL","data","a","document","createElement","href","config","download","click","queueDelete","whatIDo","getElementById","scrollIntoView","behavior","block","inline","howItWorks","createRef","componentWillReceiveProps","nextProps","activeSongIndex","queueList","render","console","log","topCharts","transform","sliceSongsIndex","queue","width","flexDirection","map","_id","e","songImage","height","artistName","color","fullWidth","handleCloseQueue","MapStateToProps","currentPlay","home","playSong","queueSongs","activeIndex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Audio from \"../Audio/Audio\";\nimport \"./RightSidebar.scss\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { setMusicData, clearQueue, deleteQueueSong } from \"../../../Actions\";\nimport axios from \"axios\";\nimport ArtistDetails from \"../../ContentComponents/ArtistDetails/ArtistDetails\";\n\nclass RightSidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.howItWorks = React.createRef();\n  }\n  state = {\n    scrollTop: 0,\n    openRightSidebar: false,\n    rightSideAction: false,\n    positionIndex: 0,\n    scrollId: null,\n    queueData: [],\n  };\n\n  handleDropdownChange = (index) => {\n    this.setState({\n      rightSideAction: !this.state.rightSideAction,\n      positionIndex: index,\n    });\n  };\n\n  handleOpenQueue = () => {\n    this.setState({\n      openRightSidebar: !this.state.openRightSidebar,\n    });\n  };\n  // handleCloseQueue = () => {\n  //   this.setState({\n  //     openRightSidebar: false,\n  //   });\n  // };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeSongIndex) {\n      this.setState(\n        {\n          scrollId: nextProps.activeSongIndex,\n          queueData: nextProps.queueList,\n        },\n        () => {\n          this.getScrollLocations(this.state.scrollId);\n        }\n      );\n    }\n  }\n\n  clearQueue = () => {\n    this.props.clearQueue();\n    window.setTimeout(() => {\n      this.handleOpenQueue();\n    }, 500);\n  };\n\n  getData = (songData, index) => {\n    {\n      this.getScrollLocations(index);\n      this.props.setMusicData(songData, index);\n    }\n  };\n\n  downloadSong = (id, songName) => {\n    const url = \"http://localhost:4000/songs/download/\" + id;\n    axios\n      .get(url, {\n        responseType: \"blob\",\n        headers: {\n          Accept: \"*/*\",\n          \"Content-Type\": \"audio/mpeg\",\n        },\n      })\n      .then((res) => {\n        let url = window.URL.createObjectURL(res.data);\n        let a = document.createElement(\"a\");\n        a.href = res.config.url;\n        a.download = songName + \".mp3\";\n        a.click();\n      });\n    this.setState({\n      rightSideAction: !this.state.rightSideAction,\n    });\n  };\n\n  queueDelete = (id) => {\n    this.props.deleteQueueSong(id);\n  };\n\n  getScrollLocations = (id) => {\n    let whatIDo = document.getElementById(id);\n\n    whatIDo &&\n      whatIDo.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"end\",\n      });\n  };\n\n  render() {\n    console.log(\"RENDER\", this.props.queueList);\n    const {\n      openRightSidebar,\n      topCharts,\n      rightSideAction,\n      positionIndex,\n      scrollTop,\n    } = this.state;\n\n    let transform;\n    let sliceSongsIndex = this.props.queue;\n\n    if (positionIndex === 0) {\n      transform = \"translate3d(137px, 18px, 0px)\";\n    } else if (positionIndex === 1) {\n      transform = \"translate3d(137px, 83px, 0px)\";\n    } else if (positionIndex === 2) {\n      transform = \"translate3d(137px, 148px, 0px)\";\n    } else if (positionIndex === 3) {\n      transform = \"translate3d(137px, 213px, 0px)\";\n    } else if (positionIndex === 4) {\n      transform = \"translate3d(137px, 213px, 0px)\";\n    }\n    return (\n      <div\n        className={\n          !openRightSidebar ? \"minimize-sidebar right-sidebar\" : \"right-sidebar\"\n        }\n      >\n        <div className=\"right-sidebar-header top-title-sidebar \">\n          <div style={{ width: \"85%\" }}>Queue</div>\n          <div onClick={this.clearQueue}> Clear</div>\n        </div>\n        <div\n          className=\"right-sidebar-body ps ps--active-y\"\n          data-scrollable=\"true\"\n        >\n          <ul\n            className=\"list-group list-group-flush\"\n            style={{ flexDirection: \"column\" }}\n          >\n            {this.props.queue &&\n              this.props.queue.map((data, index) => {\n                return (\n                  <li\n                    className={\n                      this.props.activeSongIndex === data._id\n                        ? \"active-song custom-list--item list-group-item d-flex\"\n                        : \"custom-list--item list-group-item d-flex\"\n                    }\n                    key={index}\n                    id={data._id}\n                    // onClick={(e) => this.getScrollLocations(data._id)}\n                  >\n                    <div\n                      className=\"text-dark custom-card--inline amplitude-song-container amplitude-play-pause amplitude-paused\"\n                      onClick={(e) => this.getData(sliceSongsIndex, data._id)}\n                    >\n                      <div className=\"custom-card--inline-img\">\n                        <img\n                          src={data.songImage}\n                          alt=\"song-image\"\n                          className=\"card-img--radius-sm\"\n                          style={{ height: \"40px\", width: \"40px\" }}\n                        />\n                      </div>\n                      <div className=\"custom-card--inline-desc\">\n                        <p className=\"text-truncate mb-0\">{data.songName}</p>\n                        <p className=\"text-truncate text-muted font-sm\">\n                          {data.artistName}\n                        </p>\n                      </div>\n                    </div>\n                    <ul className=\"custom-card--labels d-flex ml-auto\">\n                      <li className=\"dropleft hide-remove\">\n                        <button\n                          className=\"btn btn-icon-only\"\n                          onClick={(e) => this.queueDelete(data._id)}\n                        >\n                          <span className=\"three-dot-action\">\n                            <i\n                              className=\"fas fa-times-circle\"\n                              style={{ color: \"white\" }}\n                            ></i>\n                          </span>\n                        </button>\n                      </li>\n                      <li className=\"dropleft\">\n                        <button\n                          className=\"btn btn-icon-only\"\n                          onClick={(e) =>\n                            this.downloadSong(data._id, data.songName)\n                          }\n                        >\n                          <span className=\"three-dot-action\">\n                            <i\n                              className=\"fas fa-download\"\n                              style={{ color: \"white\" }}\n                            ></i>\n                          </span>\n                        </button>\n                      </li>\n                    </ul>\n                  </li>\n                );\n              })}\n            {/* <ActionPopover\n              dropdownExpand={rightSideAction}\n              transform={transform}\n            /> */}\n          </ul>\n        </div>\n        <Audio\n          handleOpenQueue={this.handleOpenQueue}\n          fullWidth={this.props.fullWidth}\n          handleCloseQueue={this.handleCloseQueue}\n          queueData={this.state.queueData}\n        />\n      </div>\n    );\n  }\n}\nconst MapStateToProps = (state) => ({\n  currentPlay: state.home.playSong,\n  queue: state.home.queueSongs,\n  activeSongIndex: state.home.activeIndex,\n  queueList: state.home.queueSongs,\n});\nexport default connect(MapStateToProps, {\n  setMusicData,\n  clearQueue,\n  deleteQueueSong,\n})(RightSidebar);\n"]},"metadata":{},"sourceType":"module"}