{"ast":null,"code":"import SetAuthToken from \"../Utils/SetAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER, USER_LOADING, GET_ERRORS } from \"../ActionTypes/ActionTypes.jsx\";\nexport const registerUser = (userData, history) => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => history.push(\"/home-page\")).catch(err => dispatch(console.log(err), {\n      type: GET_ERRORS,\n      payload: err.response\n    }));\n  };\n};\nexport const loginUser = userData => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => {\n      res.json().then(json => {\n        const token = json.token;\n        localStorage.setItem(\"jwtToken\", token);\n        SetAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded));\n        console.log(\"1111\");\n      });\n    });\n  };\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  SetAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Actions/Auth.jsx"],"names":["SetAuthToken","jwt_decode","SET_CURRENT_USER","USER_LOADING","GET_ERRORS","registerUser","userData","history","dispatch","url","response","fetch","method","headers","Accept","body","JSON","stringify","then","res","push","catch","err","console","log","type","payload","loginUser","json","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SACEC,gBADF,EAEEC,YAFF,EAGEC,UAHF,QAIO,gCAJP;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACjD,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,GAAG,GAAG,qCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAChCG,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAN0B,KAAN,CAAL,CAQpBY,IARoB,CAQdC,GAAD,IAASZ,OAAO,CAACa,IAAR,CAAa,YAAb,CARM,EASpBC,KAToB,CASbC,GAAD,IACLd,QAAQ,CAACe,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAD,EAAmB;AACzBG,MAAAA,IAAI,EAAErB,UADmB;AAEzBsB,MAAAA,OAAO,EAAEJ,GAAG,CAACZ;AAFY,KAAnB,CAVW,CAAvB;AAeD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMiB,SAAS,GAAIrB,QAAD,IAAc;AACrC,SAAO,MAAOE,QAAP,IAAoB;AACzB,UAAMC,GAAG,GAAG,kCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAChCG,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAN0B,KAAN,CAAL,CAOpBY,IAPoB,CAOdC,GAAD,IAAS;AACfA,MAAAA,GAAG,CAACS,IAAJ,GAAWV,IAAX,CAAiBU,IAAD,IAAU;AACxB,cAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACA7B,QAAAA,YAAY,CAAC6B,KAAD,CAAZ;AACA,cAAMG,OAAO,GAAG/B,UAAU,CAAC4B,KAAD,CAA1B;AACArB,QAAAA,QAAQ,CAACyB,cAAc,CAACD,OAAD,CAAf,CAAR;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,OAPD;AAQD,KAhBsB,CAAvB;AAiBD,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMS,cAAc,GAAID,OAAD,IAAa;AACzC,SAAO;AACLP,IAAAA,IAAI,EAAEvB,gBADD;AAELwB,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,SAAO;AACLT,IAAAA,IAAI,EAAEtB;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMgC,UAAU,GAAG,MAAO3B,QAAD,IAAc;AAC5CsB,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACApC,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,EAAAA,QAAQ,CAACyB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAJM","sourcesContent":["import SetAuthToken from \"../Utils/SetAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  GET_ERRORS,\n} from \"../ActionTypes/ActionTypes.jsx\";\n\nexport const registerUser = (userData, history) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((res) => history.push(\"/home-page\"))\n      .catch((err) =>\n        dispatch(console.log(err), {\n          type: GET_ERRORS,\n          payload: err.response,\n        })\n      );\n  };\n};\n\nexport const loginUser = (userData) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    }).then((res) => {\n      res.json().then((json) => {\n        const token = json.token;\n        localStorage.setItem(\"jwtToken\", token);\n        SetAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded));\n        console.log(\"1111\");\n      });\n    });\n  };\n};\n\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  SetAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}