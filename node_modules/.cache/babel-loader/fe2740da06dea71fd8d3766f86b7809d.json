{"ast":null,"code":"import SetAuthToken from \"../Utils/SetAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport history from \"../history\";\nimport { SET_CURRENT_USER, USER_LOADING, GET_ERRORS } from \"../ActionTypes/ActionTypes.jsx\";\nimport data from \"@iconify-icons/ion/md-volume-low\";\nexport const registerUser = (userData, history) => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => history.push(\"/home-page\")).catch(err => dispatch({\n      type: GET_ERRORS,\n      payload: err\n    }));\n  };\n};\nexport const loginUser = userData => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => {\n      res.json().then(json => {\n        console.log(json);\n\n        if (json.token) {\n          const token = json.token;\n          localStorage.setItem(\"jwtToken\", token);\n          SetAuthToken(token);\n          const decoded = jwt_decode(token);\n          dispatch(setCurrentUser(decoded));\n          history.push({\n            pathname: \"/home\"\n          });\n        } else {\n          dispatch({\n            type: GET_ERRORS,\n            payload: json\n          });\n        }\n      });\n    });\n  };\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  SetAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Actions/Auth.jsx"],"names":["SetAuthToken","jwt_decode","history","SET_CURRENT_USER","USER_LOADING","GET_ERRORS","data","registerUser","userData","dispatch","url","response","fetch","method","headers","Accept","body","JSON","stringify","then","res","push","catch","err","type","payload","loginUser","json","console","log","token","localStorage","setItem","decoded","setCurrentUser","pathname","setUserLoading","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import SetAuthToken from \"../Utils/SetAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport history from \"../history\";\n\nimport {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  GET_ERRORS,\n} from \"../ActionTypes/ActionTypes.jsx\";\nimport data from \"@iconify-icons/ion/md-volume-low\";\n\nexport const registerUser = (userData, history) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((res) => history.push(\"/home-page\"))\n      .catch((err) =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err,\n        })\n      );\n  };\n};\n\nexport const loginUser = (userData) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    }).then((res) => {\n      res.json().then((json) => {\n        console.log(json);\n        if (json.token) {\n          const token = json.token;\n          localStorage.setItem(\"jwtToken\", token);\n          SetAuthToken(token);\n          const decoded = jwt_decode(token);\n          dispatch(setCurrentUser(decoded));\n          history.push({\n            pathname: \"/home\",\n          });\n        } else {\n          dispatch({\n            type: GET_ERRORS,\n            payload: json,\n          });\n        }\n      });\n    });\n  };\n};\n\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  SetAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}