{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/Audio/Audio.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Audio.scss\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport songImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport mdPlay from \"@iconify-icons/ion/md-play\";\nimport mdSync from \"@iconify-icons/ion/md-sync\";\nimport musicalNote from \"@iconify-icons/ion/musical-note\";\nimport music from \"../../../Assets/Musics/test.mp3\";\nimport mdVolumeLow from \"@iconify-icons/ion/md-volume-low\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { normalizeUnits } from \"moment\";\n\nclass Audio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dropdownExpand: false,\n      volumeSlider: false,\n      closeAudioControl: false,\n      index: 0,\n      onPlay: \"http://localhost:4000/uploads/1608011825737.mp3\",\n      songName: \"Ek Tarfa(Reprise)\",\n      songArtist: \"Darshan Raval\",\n      songImage: \"http://localhost:4000/uploads/1608114760948.jpg\",\n      loop: false,\n      playSongs: []\n    };\n\n    this.handleDropdownChange = () => {\n      this.setState({\n        dropdownExpand: !this.state.dropdownExpand\n      });\n    };\n\n    this.openVolumeSlider = () => {\n      this.setState({\n        volumeSlider: !this.state.volumeSlider\n      });\n    };\n\n    this.popupActionClick = e => {\n      if (this.node.contains(e.target)) {\n        this.setState({\n          closeAudioControl: true\n        });\n        return true;\n      }\n\n      this.setState({\n        closeAudioControl: false\n      });\n    };\n\n    this.startLoop = () => {\n      this.setState({\n        loop: !this.state.loop\n      });\n    };\n\n    this.nextSong = () => {\n      console.log(\"hhiiiiiiii\");\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.currentSongData !== nextProps.currentSongData) {\n      this.setState({\n        playSongs: nextProps.currentSongData,\n        onPlay: nextProps.currentSongData[this.state.index].songUrl,\n        songName: nextProps.currentSongData[this.state.index].songName,\n        songArtist: nextProps.currentSongData[this.state.index].artist,\n        songImage: nextProps.currentSongData[this.state.index].songImage\n      }); // nextProps.currentSongData.map((data, index) => {\n      //   this.setState({\n      //     onPlay: data.songUrl,\n      //     songName: data.songName,\n      //     songArtist: data.artist,\n      //     songImage: data.songImage,\n      //   });\n      // });\n    }\n  }\n\n  render() {\n    const {\n      dropdownExpand,\n      volumeSlider,\n      onPlay,\n      songName,\n      songArtist,\n      songImage,\n      closeAudioControl,\n      loop\n    } = this.state;\n    console.log(loop, \"11111111\");\n    console.log(this.state.playSongs);\n    const fullWidth = this.props;\n    let audioClass;\n\n    if (fullWidth.fullWidth) {\n      audioClass = \"audioPlayer long-player\";\n    } else {\n      audioClass = \"audioPlayer\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: audioClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: songImage,\n            alt: \"song-image\",\n            className: \"song-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info pl-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-title\",\n            children: songName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-artist\",\n            children: songArtist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-controls--left d-flex mr-auto\",\n          children: /*#__PURE__*/_jsxDEV(AudioPlayer, {\n            src: onPlay,\n            onClickNext: this.nextSong,\n            autoPlay: true,\n            showSkipControls: true,\n            loop: loop ? true : false,\n            showJumpControls: false,\n            customProgressBarSection: [RHAP_UI.PROGRESS_BAR],\n            customVolumeControls: [closeAudioControl && volumeSlider ? RHAP_UI.VOLUME : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n              ref: node => this.node = node,\n              className: \"btn btn-icon-only\",\n              onClick: this.openVolumeSlider,\n              style: {\n                position: \"absolute\",\n                right: \"105px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"iconify audio-player-icon\",\n                \"data-icon\": \"ion-md-volume-low\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)],\n            customControlsSection: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon-only\",\n              onClick: this.startLoop,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"audio-player-icon iconify\",\n                \"data-icon\": loop ? \"ion-md-sync\" : \"ic:baseline-sync-disabled\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), RHAP_UI.MAIN_CONTROLS, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon-only amplitude-shuffle amplitude-shuffle-on\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"audio-player-icon iconify\",\n                \"data-icon\": \"ion-md-shuffle\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), RHAP_UI.CURRENT_TIME, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"or-arrow\",\n              children: \" / \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), RHAP_UI.DURATION, RHAP_UI.VOLUME_CONTROLS]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropleft\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon-only\",\n            onClick: this.handleDropdownChange,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"iconify audio-player-icon\",\n              \"data-icon\": \"fe:elipsis-v\",\n              \"data-inline\": \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ActionPopover, {\n            dropdownExpand: dropdownExpand,\n            transform: \"translate3d(-162px, -143px, 0px)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon-only\",\n          onClick: this.props.handleOpenSidebar,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"music-icon\",\n            icon: musicalNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentSongData: state.home.songData\n});\n\nexport default connect(mapStateToProps)(Audio);","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/Audio/Audio.jsx"],"names":["React","Component","AudioPlayer","RHAP_UI","ReactAudioPlayer","songImage","Icon","InlineIcon","mdPlay","mdSync","musicalNote","music","mdVolumeLow","ActionPopover","connect","normalizeUnits","Audio","state","dropdownExpand","volumeSlider","closeAudioControl","index","onPlay","songName","songArtist","loop","playSongs","handleDropdownChange","setState","openVolumeSlider","popupActionClick","e","node","contains","target","startLoop","nextSong","console","log","componentWillMount","document","addEventListener","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","props","currentSongData","songUrl","artist","render","fullWidth","audioClass","PROGRESS_BAR","VOLUME","position","right","MAIN_CONTROLS","CURRENT_TIME","DURATION","VOLUME_CONTROLS","handleOpenSidebar","mapStateToProps","home","songData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Audio.scss\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport songImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport mdPlay from \"@iconify-icons/ion/md-play\";\nimport mdSync from \"@iconify-icons/ion/md-sync\";\nimport musicalNote from \"@iconify-icons/ion/musical-note\";\nimport music from \"../../../Assets/Musics/test.mp3\";\nimport mdVolumeLow from \"@iconify-icons/ion/md-volume-low\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { normalizeUnits } from \"moment\";\nclass Audio extends Component {\n  state = {\n    dropdownExpand: false,\n    volumeSlider: false,\n    closeAudioControl: false,\n    index: 0,\n    onPlay: \"http://localhost:4000/uploads/1608011825737.mp3\",\n    songName: \"Ek Tarfa(Reprise)\",\n    songArtist: \"Darshan Raval\",\n    songImage: \"http://localhost:4000/uploads/1608114760948.jpg\",\n    loop: false,\n    playSongs: [],\n  };\n\n  handleDropdownChange = () => {\n    this.setState({\n      dropdownExpand: !this.state.dropdownExpand,\n    });\n  };\n  openVolumeSlider = () => {\n    this.setState({\n      volumeSlider: !this.state.volumeSlider,\n    });\n  };\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n  popupActionClick = (e) => {\n    if (this.node.contains(e.target)) {\n      this.setState({\n        closeAudioControl: true,\n      });\n      return true;\n    }\n    this.setState({\n      closeAudioControl: false,\n    });\n  };\n  componentWillReceiveProps(nextProps) {\n    if (this.props.currentSongData !== nextProps.currentSongData) {\n      this.setState({\n        playSongs: nextProps.currentSongData,\n        onPlay: nextProps.currentSongData[this.state.index].songUrl,\n        songName: nextProps.currentSongData[this.state.index].songName,\n        songArtist: nextProps.currentSongData[this.state.index].artist,\n        songImage: nextProps.currentSongData[this.state.index].songImage,\n      });\n      // nextProps.currentSongData.map((data, index) => {\n      //   this.setState({\n      //     onPlay: data.songUrl,\n      //     songName: data.songName,\n      //     songArtist: data.artist,\n      //     songImage: data.songImage,\n      //   });\n      // });\n    }\n  }\n  startLoop = () => {\n    this.setState({\n      loop: !this.state.loop,\n    });\n  };\n  nextSong = () => {\n    console.log(\"hhiiiiiiii\");\n  };\n\n  render() {\n    const {\n      dropdownExpand,\n      volumeSlider,\n      onPlay,\n      songName,\n      songArtist,\n      songImage,\n      closeAudioControl,\n      loop,\n    } = this.state;\n    console.log(loop, \"11111111\");\n    console.log(this.state.playSongs);\n    const fullWidth = this.props;\n    let audioClass;\n    if (fullWidth.fullWidth) {\n      audioClass = \"audioPlayer long-player\";\n    } else {\n      audioClass = \"audioPlayer\";\n    }\n    return (\n      <div className={audioClass}>\n        <div className=\"audio\">\n          <div className=\"song-image\">\n            <img src={songImage} alt=\"song-image\" className=\"song-img\" />\n          </div>\n          <div className=\"song-info pl-3\">\n            <span className=\"song-title\">{songName}</span>\n            <span className=\"song-artist\">{songArtist}</span>\n          </div>\n        </div>\n        <div className=\"audio-controls\">\n          <div className=\"audio-controls--left d-flex mr-auto\">\n            <AudioPlayer\n              src={onPlay}\n              onClickNext={this.nextSong}\n              autoPlay={true}\n              showSkipControls={true}\n              loop={loop ? true : false}\n              showJumpControls={false}\n              customProgressBarSection={[RHAP_UI.PROGRESS_BAR]}\n              customVolumeControls={[\n                closeAudioControl && volumeSlider ? RHAP_UI.VOLUME : \"\",\n                <button\n                  ref={(node) => (this.node = node)}\n                  className=\"btn btn-icon-only\"\n                  onClick={this.openVolumeSlider}\n                  style={{ position: \"absolute\", right: \"105px\" }}\n                >\n                  <span\n                    className=\"iconify audio-player-icon\"\n                    data-icon=\"ion-md-volume-low\"\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n              ]}\n              customControlsSection={[\n                <button className=\"btn btn-icon-only\" onClick={this.startLoop}>\n                  <span\n                    className=\"audio-player-icon iconify\"\n                    data-icon={\n                      loop ? \"ion-md-sync\" : \"ic:baseline-sync-disabled\"\n                    }\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n                RHAP_UI.MAIN_CONTROLS,\n                <button className=\"btn btn-icon-only amplitude-shuffle amplitude-shuffle-on\">\n                  <span\n                    className=\"audio-player-icon iconify\"\n                    data-icon=\"ion-md-shuffle\"\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n                RHAP_UI.CURRENT_TIME,\n                <div className=\"or-arrow\"> / </div>,\n                RHAP_UI.DURATION,\n                RHAP_UI.VOLUME_CONTROLS,\n              ]}\n            />\n          </div>\n        </div>\n        <div className=\"audio-info\">\n          <div className=\"dropleft\">\n            <button\n              className=\"btn btn-icon-only\"\n              onClick={this.handleDropdownChange}\n            >\n              <span\n                className=\"iconify audio-player-icon\"\n                data-icon=\"fe:elipsis-v\"\n                data-inline=\"false\"\n              ></span>\n            </button>\n            <ActionPopover\n              dropdownExpand={dropdownExpand}\n              transform=\"translate3d(-162px, -143px, 0px)\"\n            />\n          </div>\n          <button\n            className=\"btn btn-icon-only\"\n            onClick={this.props.handleOpenSidebar}\n          >\n            <Icon className=\"music-icon\" icon={musicalNote} />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  currentSongData: state.home.songData,\n});\n\nexport default connect(mapStateToProps)(Audio);\n"]},"metadata":{},"sourceType":"module"}