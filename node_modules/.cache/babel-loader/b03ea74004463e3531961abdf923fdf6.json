{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/ReusableComponents/Modal/Modal.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Modal.scss\";\n\nclass Modal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePopupClick = e => {\n      if (this.node.contains(e.target)) {\n        return;\n      }\n\n      !this.props.preventToggleOnClickOutsideModal && this.props.toggleModal();\n    };\n  }\n\n  componentWillMount() {\n    // if (!this.props.modalfrom) {\n    document.addEventListener(\"mousedown\", this.handlePopupClick, false); // }\n  }\n\n  componentWillUnmount() {\n    // if (!this.props.modalfrom) {\n    document.removeEventListener(\"mousedown\", this.handlePopupClick, false); // }\n  }\n\n  render() {\n    let {\n      children,\n      id,\n      title,\n      className\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: id,\n      className: \"modal fade show\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"myModalLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered \" + className,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: node => this.node = node,\n          className: \"modal-content\",\n          children: [title && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"modal-title d-inline\",\n              id: \"myModalLabel\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              onClick: this.props.toggleModal,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), children && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/ReusableComponents/Modal/Modal.jsx"],"names":["React","Component","Modal","handlePopupClick","e","node","contains","target","props","preventToggleOnClickOutsideModal","toggleModal","componentWillMount","document","addEventListener","componentWillUnmount","removeEventListener","render","children","id","title","className"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;;AACA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAW5BE,gBAX4B,GAWRC,CAAD,IAAO;AACxB,UAAI,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAJ,EAAkC;AAChC;AACD;;AACD,OAAC,KAAKC,KAAL,CAAWC,gCAAZ,IAAgD,KAAKD,KAAL,CAAWE,WAAX,EAAhD;AACD,KAhB2B;AAAA;;AAC5BC,EAAAA,kBAAkB,GAAG;AACnB;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKV,gBAA5C,EAA8D,KAA9D,EAFmB,CAGnB;AACD;;AACDW,EAAAA,oBAAoB,GAAG;AACrB;AACAF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0C,KAAKZ,gBAA/C,EAAiE,KAAjE,EAFqB,CAGrB;AACD;;AAODa,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,EAAZ;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA;AAAvB,QAAqC,KAAKZ,KAA9C;AAEA,wBACE;AACE,MAAA,EAAE,EAAEU,EADN;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,QAAQ,EAAC,IAHX;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,yBAAgB,cALlB;AAAA,6BAOE;AAAK,QAAA,SAAS,EAAE,wCAAwCE,SAAxD;AAAA,+BACE;AAAK,UAAA,GAAG,EAAGf,IAAD,IAAW,KAAKA,IAAL,GAAYA,IAAjC;AAAwC,UAAA,SAAS,EAAC,eAAlD;AAAA,qBACGc,KAAK,iBACJ;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,sBAAd;AAAqC,cAAA,EAAE,EAAC,cAAxC;AAAA,wBACGA;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,OAFZ;AAGE,cAAA,OAAO,EAAE,KAAKX,KAAL,CAAWE,WAHtB;AAAA,qCAKE;AAAM,+BAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAeGO,QAAQ,iBAAI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,sBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAff;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAjD2B;;AAmD9B,eAAef,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Modal.scss\";\nclass Modal extends Component {\n  componentWillMount() {\n    // if (!this.props.modalfrom) {\n    document.addEventListener(\"mousedown\", this.handlePopupClick, false);\n    // }\n  }\n  componentWillUnmount() {\n    // if (!this.props.modalfrom) {\n    document.removeEventListener(\"mousedown\", this.handlePopupClick, false);\n    // }\n  }\n  handlePopupClick = (e) => {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    !this.props.preventToggleOnClickOutsideModal && this.props.toggleModal();\n  };\n  render() {\n    let { children, id, title, className } = this.props;\n\n    return (\n      <div\n        id={id}\n        className=\"modal fade show\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"myModalLabel\"\n      >\n        <div className={\"modal-dialog modal-dialog-centered \" + className}>\n          <div ref={(node) => (this.node = node)} className=\"modal-content\">\n            {title && (\n              <div className=\"modal-header\">\n                <h4 className=\"modal-title d-inline\" id=\"myModalLabel\">\n                  {title}\n                </h4>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  onClick={this.props.toggleModal}\n                >\n                  <span aria-hidden=\"true\">Ã—</span>\n                </button>\n              </div>\n            )}\n            {children && <div className=\"modal-body\">{children}</div>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}