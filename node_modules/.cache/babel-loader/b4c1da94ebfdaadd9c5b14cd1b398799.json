{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/Audio/Audio.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Audio.scss\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport songImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport mdPlay from \"@iconify-icons/ion/md-play\";\nimport mdSync from \"@iconify-icons/ion/md-sync\";\nimport musicalNote from \"@iconify-icons/ion/musical-note\";\nimport music from \"../../../Assets/Musics/test.mp3\";\nimport mdVolumeLow from \"@iconify-icons/ion/md-volume-low\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { normalizeUnits } from \"moment\";\nimport { getActiveIndex, downloadSong } from \"../../../Actions\";\nimport logger from \"redux-logger\";\nimport axios from \"axios\";\nimport defaultImage from \"../../../Assets/defaultSong.jpg\";\n\nclass Audio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dropdownExpand: false,\n      volumeSlider: false,\n      closeAudioControl: false,\n      index: 0,\n      onPlay: \"\",\n      songName: \"\",\n      songArtist: \"\",\n      songImage: defaultImage,\n      songUrl: \"\",\n      shuffle: false,\n      playSongs: [],\n      prevIndex: [],\n      shuffleIndex: 1,\n      incrementShuffle: 0\n    };\n\n    this.handleDropdownChange = () => {\n      this.setState({\n        dropdownExpand: !this.state.dropdownExpand\n      });\n    };\n\n    this.openVolumeSlider = () => {\n      this.setState({\n        volumeSlider: !this.state.volumeSlider\n      });\n    };\n\n    this.popupActionClick = e => {\n      if (this.node.contains(e.target)) {\n        this.setState({\n          closeAudioControl: true\n        });\n        return true;\n      }\n\n      this.setState({\n        closeAudioControl: false\n      });\n    };\n\n    this.getSongsData = nextProps => {\n      if (nextProps.currentIndex) {\n        this.setState({\n          playSongs: nextProps.currentSongData,\n          index: nextProps.currentIndex\n        }, () => {\n          var target = this.state.playSongs.find(temp => temp._id == this.state.index);\n          this.setSongData(target);\n          this.props.getActiveIndex(this.state.index, this.state.playSongs);\n        });\n      } else {\n        this.setState({\n          playSongs: nextProps.currentSongData,\n          index: nextProps.currentSongData[0]._id\n        }, () => {\n          var target = nextProps.currentSongData.find(temp => temp._id == this.state.index);\n          this.setSongData(target);\n          this.props.getActiveIndex(this.state.index, this.state.playSongs);\n        });\n      }\n    };\n\n    this.setSongData = target => {\n      this.setState({\n        onPlay: target.songUrl,\n        songName: target.songName,\n        songArtist: target.artistName,\n        songImage: target.songImage,\n        songUrl: target._id\n      });\n    };\n\n    this.getShuffleNumber = () => {\n      var min = 0;\n      var max = 4;\n      var i;\n      i = Math.floor(Math.random() * (max - min)) + min;\n\n      while (i == prev_no) {\n        i = Math.floor(Math.random() * (max - min)) + min;\n        prev_no = i;\n      }\n\n      return i;\n    };\n\n    this.nextSong = () => {\n      if (this.state.shuffle) {\n        const shuffleValue = Math.floor(Math.random(0, this.props.queueList.length) * 10);\n\n        if (!this.state.prevIndex.includes(shuffleValue)) {\n          this.setState({\n            prevIndex: this.state.prevIndex.concat(shuffleValue)\n          }, () => {\n            this.setState({\n              index: this.props.queueList[shuffleValue]._id\n            }, () => {\n              var target = this.props.queueList.find(temp => temp._id == this.state.index);\n              this.setSongData(target);\n              this.props.getActiveIndex(this.state.index, this.props.queueList);\n            });\n          });\n        }\n      } else {\n        const songIndex = this.props.queueList.findIndex((element, index) => {\n          if (element._id === this.state.index) {\n            return true;\n          }\n        });\n\n        if (this.props.queueList.length === songIndex + 1) {\n          this.setState({\n            index: this.props.queueList[0]._id\n          }, () => {\n            var target = this.props.queueList.find(temp => temp._id == this.state.index);\n            this.setSongData(target);\n            this.props.getActiveIndex(this.state.index, this.props.queueList);\n          });\n        } else {\n          let nextIndex;\n          const songIndex = this.props.queueList.findIndex((element, index) => {\n            if (element._id === this.state.index) {\n              return true;\n            }\n          });\n          nextIndex = this.props.queueList[songIndex + 1]._id;\n          this.setState({\n            index: nextIndex\n          }, () => {\n            var target = this.props.queueList.find(temp => temp._id == this.state.index);\n            this.setSongData(target);\n            this.props.getActiveIndex(this.state.index, this.props.queueList);\n          });\n        }\n      }\n    };\n\n    this.previousSong = () => {\n      if (this.state.shuffle) {\n        this.setState({\n          index: this.state.incrementShuffle\n        }, () => {\n          this.setState({\n            onPlay: this.props.queueList[this.state.prevIndex[this.state.index]].songUrl,\n            songName: this.props.queueList[this.state.prevIndex[this.state.index]].songName,\n            songArtist: this.props.queueList[this.state.prevIndex[this.state.index]].artistName,\n            songImage: this.props.queueList[this.state.prevIndex[this.state.index]].songImage,\n            songUrl: this.props.queueList[this.state.prevIndex[this.state.index]]._id\n          }, () => {\n            this.props.getActiveIndex(this.state.prevIndex[this.state.index], this.props.queueList);\n\n            if (this.state.incrementShuffle < this.state.prevIndex.length - 1) {\n              this.setState({\n                incrementShuffle: this.state.incrementShuffle + 1\n              });\n            }\n          });\n        });\n      } else {\n        if (this.state.index === this.props.queueList[0]._id) {\n          this.setState({\n            index: this.props.queueList[0]._id\n          }, () => {\n            var target = this.props.queueList.find(temp => temp._id == this.state.index);\n            this.setSongData(target);\n            this.props.getActiveIndex(this.state.index, this.props.queueList);\n          });\n        } else {\n          let nextIndex;\n          const songIndex = this.props.queueList.findIndex((element, index) => {\n            if (element._id === this.state.index) {\n              return true;\n            }\n          });\n          nextIndex = this.props.queueList[songIndex - 1]._id;\n          this.setState({\n            index: nextIndex\n          }, () => {\n            var target = this.props.queueList.find(temp => temp._id == this.state.index);\n            this.setSongData(target);\n            this.props.getActiveIndex(this.state.index, this.props.queueList);\n          });\n        }\n      }\n    };\n\n    this.shuffleStart = () => {\n      this.setState({\n        shuffle: !this.state.shuffle\n      });\n    };\n\n    this.downloadSong = () => {\n      const url = \"http://localhost:4000/songs/download/\" + this.state.songUrl;\n      axios.get(url, {\n        responseType: \"blob\",\n        headers: {\n          Accept: \"*/*\",\n          \"Content-Type\": \"audio/mpeg\"\n        }\n      }).then(res => {\n        // fileDownload(res.data, filename);\n        let url = window.URL.createObjectURL(res.data);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.songName + \".mp3\";\n        a.click();\n      });\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.currentIndex !== nextProps.currentIndex) {\n      this.getSongsData(nextProps);\n    }\n  }\n\n  render() {\n    console.log(\"AUDIO\");\n    console.log(this.props.queueList);\n    const {\n      dropdownExpand,\n      volumeSlider,\n      onPlay,\n      songName,\n      songArtist,\n      songImage,\n      closeAudioControl,\n      loopSong,\n      shuffle\n    } = this.state;\n    const loop = loopSong;\n    const fullWidth = this.props;\n    let audioClass;\n\n    if (fullWidth.fullWidth) {\n      audioClass = \"audioPlayer long-player\";\n    } else {\n      audioClass = \"audioPlayer\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: audioClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: songImage,\n            alt: \"song-image\",\n            className: \"song-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info pl-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-title\",\n            children: songName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-artist\",\n            children: songArtist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-controls--left d-flex mr-auto\",\n          children: /*#__PURE__*/_jsxDEV(AudioPlayer, {\n            loop: loop,\n            src: onPlay,\n            onClickNext: this.nextSong,\n            onClickPrevious: this.previousSong // autoPlay={true}\n            ,\n            showSkipControls: true,\n            showJumpControls: false,\n            customProgressBarSection: [RHAP_UI.PROGRESS_BAR],\n            customVolumeControls: [closeAudioControl && volumeSlider ? RHAP_UI.VOLUME : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n              ref: node => this.node = node,\n              className: \"btn btn-icon-only\",\n              onClick: () => this.openVolumeSlider(),\n              style: {\n                position: \"absolute\",\n                right: \"105px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"iconify audio-player-icon\",\n                \"data-icon\": \"ion-md-volume-low\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)],\n            customControlsSection: [RHAP_UI.LOOP, RHAP_UI.MAIN_CONTROLS, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon-only amplitude-shuffle amplitude-shuffle-on\",\n              onClick: () => this.shuffleStart(),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"audio-player-icon iconify\",\n                \"data-icon\": \"ion-md-shuffle\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), RHAP_UI.CURRENT_TIME, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"or-arrow\",\n              children: \" / \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), RHAP_UI.DURATION, RHAP_UI.VOLUME_CONTROLS]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropleft\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon-only\",\n            onClick: () => this.downloadSong(),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"white\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-download\",\n                style: {\n                  fontSize: \"1.3rem\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon-only\",\n          onClick: () => this.props.handleOpenQueue(),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"music-icon\",\n            icon: musicalNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst MapDispatchToProps = dispatch => {\n  return {\n    getActiveIndex: (index, playsongs) => {\n      dispatch(getActiveIndex(index, playsongs));\n    },\n    downloadSong: () => {\n      dispatch(downloadSong());\n    }\n  };\n};\n\n_c = MapDispatchToProps;\n\nconst mapStateToProps = state => ({\n  currentSongData: state.home.songData,\n  currentIndex: state.home.index,\n  queueList: state.home.queueSongs\n});\n\nexport default connect(mapStateToProps, MapDispatchToProps)(Audio);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDispatchToProps\");","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/Audio/Audio.jsx"],"names":["React","Component","AudioPlayer","RHAP_UI","ReactAudioPlayer","songImage","Icon","InlineIcon","mdPlay","mdSync","musicalNote","music","mdVolumeLow","ActionPopover","connect","normalizeUnits","getActiveIndex","downloadSong","logger","axios","defaultImage","Audio","state","dropdownExpand","volumeSlider","closeAudioControl","index","onPlay","songName","songArtist","songUrl","shuffle","playSongs","prevIndex","shuffleIndex","incrementShuffle","handleDropdownChange","setState","openVolumeSlider","popupActionClick","e","node","contains","target","getSongsData","nextProps","currentIndex","currentSongData","find","temp","_id","setSongData","props","artistName","getShuffleNumber","min","max","i","Math","floor","random","prev_no","nextSong","shuffleValue","queueList","length","includes","concat","songIndex","findIndex","element","nextIndex","previousSong","shuffleStart","url","get","responseType","headers","Accept","then","res","window","URL","createObjectURL","data","a","document","createElement","href","download","click","componentWillMount","addEventListener","componentWillUnmount","removeEventListener","componentWillReceiveProps","render","console","log","loopSong","loop","fullWidth","audioClass","PROGRESS_BAR","VOLUME","position","right","LOOP","MAIN_CONTROLS","CURRENT_TIME","DURATION","VOLUME_CONTROLS","color","fontSize","handleOpenQueue","MapDispatchToProps","dispatch","playsongs","mapStateToProps","home","songData","queueSongs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Audio.scss\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport songImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport mdPlay from \"@iconify-icons/ion/md-play\";\nimport mdSync from \"@iconify-icons/ion/md-sync\";\nimport musicalNote from \"@iconify-icons/ion/musical-note\";\nimport music from \"../../../Assets/Musics/test.mp3\";\nimport mdVolumeLow from \"@iconify-icons/ion/md-volume-low\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { normalizeUnits } from \"moment\";\nimport { getActiveIndex, downloadSong } from \"../../../Actions\";\nimport logger from \"redux-logger\";\nimport axios from \"axios\";\nimport defaultImage from \"../../../Assets/defaultSong.jpg\";\n\nclass Audio extends Component {\n  state = {\n    dropdownExpand: false,\n    volumeSlider: false,\n    closeAudioControl: false,\n    index: 0,\n    onPlay: \"\",\n    songName: \"\",\n    songArtist: \"\",\n    songImage: defaultImage,\n    songUrl: \"\",\n    shuffle: false,\n    playSongs: [],\n    prevIndex: [],\n    shuffleIndex: 1,\n    incrementShuffle: 0,\n  };\n\n  handleDropdownChange = () => {\n    this.setState({\n      dropdownExpand: !this.state.dropdownExpand,\n    });\n  };\n  openVolumeSlider = () => {\n    this.setState({\n      volumeSlider: !this.state.volumeSlider,\n    });\n  };\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n  popupActionClick = (e) => {\n    if (this.node.contains(e.target)) {\n      this.setState({\n        closeAudioControl: true,\n      });\n      return true;\n    }\n    this.setState({\n      closeAudioControl: false,\n    });\n  };\n  componentWillReceiveProps(nextProps) {\n    if (this.props.currentIndex !== nextProps.currentIndex) {\n      this.getSongsData(nextProps);\n    }\n  }\n\n  getSongsData = (nextProps) => {\n    if (nextProps.currentIndex) {\n      this.setState(\n        {\n          playSongs: nextProps.currentSongData,\n          index: nextProps.currentIndex,\n        },\n        () => {\n          var target = this.state.playSongs.find(\n            (temp) => temp._id == this.state.index\n          );\n          this.setSongData(target);\n          this.props.getActiveIndex(this.state.index, this.state.playSongs);\n        }\n      );\n    } else {\n      this.setState(\n        {\n          playSongs: nextProps.currentSongData,\n          index: nextProps.currentSongData[0]._id,\n        },\n        () => {\n          var target = nextProps.currentSongData.find(\n            (temp) => temp._id == this.state.index\n          );\n          this.setSongData(target);\n          this.props.getActiveIndex(this.state.index, this.state.playSongs);\n        }\n      );\n    }\n  };\n\n  setSongData = (target) => {\n    this.setState({\n      onPlay: target.songUrl,\n      songName: target.songName,\n      songArtist: target.artistName,\n      songImage: target.songImage,\n      songUrl: target._id,\n    });\n  };\n\n  getShuffleNumber = () => {\n    var min = 0;\n    var max = 4;\n    var i;\n    i = Math.floor(Math.random() * (max - min)) + min;\n    while (i == prev_no) {\n      i = Math.floor(Math.random() * (max - min)) + min;\n      prev_no = i;\n    }\n\n    return i;\n  };\n\n  nextSong = () => {\n    if (this.state.shuffle) {\n      const shuffleValue = Math.floor(\n        Math.random(0, this.props.queueList.length) * 10\n      );\n\n      if (!this.state.prevIndex.includes(shuffleValue)) {\n        this.setState(\n          {\n            prevIndex: this.state.prevIndex.concat(shuffleValue),\n          },\n          () => {\n            this.setState(\n              {\n                index: this.props.queueList[shuffleValue]._id,\n              },\n              () => {\n                var target = this.props.queueList.find(\n                  (temp) => temp._id == this.state.index\n                );\n                this.setSongData(target);\n                this.props.getActiveIndex(\n                  this.state.index,\n                  this.props.queueList\n                );\n              }\n            );\n          }\n        );\n      }\n    } else {\n      const songIndex = this.props.queueList.findIndex((element, index) => {\n        if (element._id === this.state.index) {\n          return true;\n        }\n      });\n      if (this.props.queueList.length === songIndex + 1) {\n        this.setState(\n          {\n            index: this.props.queueList[0]._id,\n          },\n          () => {\n            var target = this.props.queueList.find(\n              (temp) => temp._id == this.state.index\n            );\n            this.setSongData(target);\n            this.props.getActiveIndex(this.state.index, this.props.queueList);\n          }\n        );\n      } else {\n        let nextIndex;\n        const songIndex = this.props.queueList.findIndex((element, index) => {\n          if (element._id === this.state.index) {\n            return true;\n          }\n        });\n        nextIndex = this.props.queueList[songIndex + 1]._id;\n\n        this.setState(\n          {\n            index: nextIndex,\n          },\n          () => {\n            var target = this.props.queueList.find(\n              (temp) => temp._id == this.state.index\n            );\n            this.setSongData(target);\n            this.props.getActiveIndex(this.state.index, this.props.queueList);\n          }\n        );\n      }\n    }\n  };\n\n  previousSong = () => {\n    if (this.state.shuffle) {\n      this.setState(\n        {\n          index: this.state.incrementShuffle,\n        },\n        () => {\n          this.setState(\n            {\n              onPlay: this.props.queueList[\n                this.state.prevIndex[this.state.index]\n              ].songUrl,\n              songName: this.props.queueList[\n                this.state.prevIndex[this.state.index]\n              ].songName,\n              songArtist: this.props.queueList[\n                this.state.prevIndex[this.state.index]\n              ].artistName,\n              songImage: this.props.queueList[\n                this.state.prevIndex[this.state.index]\n              ].songImage,\n              songUrl: this.props.queueList[\n                this.state.prevIndex[this.state.index]\n              ]._id,\n            },\n            () => {\n              this.props.getActiveIndex(\n                this.state.prevIndex[this.state.index],\n                this.props.queueList\n              );\n              if (\n                this.state.incrementShuffle <\n                this.state.prevIndex.length - 1\n              ) {\n                this.setState({\n                  incrementShuffle: this.state.incrementShuffle + 1,\n                });\n              }\n            }\n          );\n        }\n      );\n    } else {\n      if (this.state.index === this.props.queueList[0]._id) {\n        this.setState(\n          {\n            index: this.props.queueList[0]._id,\n          },\n          () => {\n            var target = this.props.queueList.find(\n              (temp) => temp._id == this.state.index\n            );\n            this.setSongData(target);\n            this.props.getActiveIndex(this.state.index, this.props.queueList);\n          }\n        );\n      } else {\n        let nextIndex;\n        const songIndex = this.props.queueList.findIndex((element, index) => {\n          if (element._id === this.state.index) {\n            return true;\n          }\n        });\n        nextIndex = this.props.queueList[songIndex - 1]._id;\n        this.setState(\n          {\n            index: nextIndex,\n          },\n          () => {\n            var target = this.props.queueList.find(\n              (temp) => temp._id == this.state.index\n            );\n            this.setSongData(target);\n            this.props.getActiveIndex(this.state.index, this.props.queueList);\n          }\n        );\n      }\n    }\n  };\n\n  shuffleStart = () => {\n    this.setState({\n      shuffle: !this.state.shuffle,\n    });\n  };\n\n  downloadSong = () => {\n    const url = \"http://localhost:4000/songs/download/\" + this.state.songUrl;\n    axios\n      .get(url, {\n        responseType: \"blob\",\n        headers: {\n          Accept: \"*/*\",\n          \"Content-Type\": \"audio/mpeg\",\n        },\n      })\n      .then((res) => {\n        // fileDownload(res.data, filename);\n        let url = window.URL.createObjectURL(res.data);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.songName + \".mp3\";\n        a.click();\n      });\n  };\n\n  render() {\n    console.log(\"AUDIO\");\n    console.log(this.props.queueList);\n    const {\n      dropdownExpand,\n      volumeSlider,\n      onPlay,\n      songName,\n      songArtist,\n      songImage,\n      closeAudioControl,\n      loopSong,\n      shuffle,\n    } = this.state;\n    const loop = loopSong;\n    const fullWidth = this.props;\n\n    let audioClass;\n    if (fullWidth.fullWidth) {\n      audioClass = \"audioPlayer long-player\";\n    } else {\n      audioClass = \"audioPlayer\";\n    }\n    return (\n      <div className={audioClass}>\n        <div className=\"audio\">\n          <div className=\"song-image\">\n            <img src={songImage} alt=\"song-image\" className=\"song-img\" />\n          </div>\n          <div className=\"song-info pl-3\">\n            <span className=\"song-title\">{songName}</span>\n            <span className=\"song-artist\">{songArtist}</span>\n          </div>\n        </div>\n        <div className=\"audio-controls\">\n          <div className=\"audio-controls--left d-flex mr-auto\">\n            <AudioPlayer\n              loop={loop}\n              src={onPlay}\n              onClickNext={this.nextSong}\n              onClickPrevious={this.previousSong}\n              // autoPlay={true}\n              showSkipControls={true}\n              showJumpControls={false}\n              customProgressBarSection={[RHAP_UI.PROGRESS_BAR]}\n              customVolumeControls={[\n                closeAudioControl && volumeSlider ? RHAP_UI.VOLUME : \"\",\n                <button\n                  ref={(node) => (this.node = node)}\n                  className=\"btn btn-icon-only\"\n                  onClick={() => this.openVolumeSlider()}\n                  style={{ position: \"absolute\", right: \"105px\" }}\n                >\n                  <span\n                    className=\"iconify audio-player-icon\"\n                    data-icon=\"ion-md-volume-low\"\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n              ]}\n              customControlsSection={[\n                RHAP_UI.LOOP,\n                RHAP_UI.MAIN_CONTROLS,\n                <button\n                  className=\"btn btn-icon-only amplitude-shuffle amplitude-shuffle-on\"\n                  onClick={() => this.shuffleStart()}\n                >\n                  <span\n                    className={\"audio-player-icon iconify\"}\n                    data-icon=\"ion-md-shuffle\"\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n\n                RHAP_UI.CURRENT_TIME,\n                <div className=\"or-arrow\"> / </div>,\n                RHAP_UI.DURATION,\n                RHAP_UI.VOLUME_CONTROLS,\n              ]}\n            />\n          </div>\n        </div>\n        <div className=\"audio-info\">\n          <div className=\"dropleft\">\n            <button\n              className=\"btn btn-icon-only\"\n              onClick={() => this.downloadSong()}\n            >\n              <span style={{ color: \"white\" }}>\n                <i\n                  className=\"fas fa-download\"\n                  style={{ fontSize: \"1.3rem\" }}\n                ></i>\n              </span>\n              {/* <span\n                className=\"iconify audio-player-icon\"\n                data-icon=\"bx:bxs-download\"\n                data-inline=\"false\"\n              ></span> */}\n            </button>\n            {/* <button\n              className=\"btn btn-icon-only\"\n              onClick={this.handleDropdownChange}\n            >\n              <span\n                className=\"iconify audio-player-icon\"\n                data-icon=\"fe:elipsis-v\"\n                data-inline=\"false\"\n              ></span>\n            </button>\n            <ActionPopover\n              dropdownExpand={dropdownExpand}\n              transform=\"translate3d(-162px, -143px, 0px)\"\n            /> */}\n          </div>\n          <button\n            className=\"btn btn-icon-only\"\n            onClick={() => this.props.handleOpenQueue()}\n          >\n            <Icon className=\"music-icon\" icon={musicalNote} />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    getActiveIndex: (index, playsongs) => {\n      dispatch(getActiveIndex(index, playsongs));\n    },\n    downloadSong: () => {\n      dispatch(downloadSong());\n    },\n  };\n};\n\nconst mapStateToProps = (state) => ({\n  currentSongData: state.home.songData,\n  currentIndex: state.home.index,\n  queueList: state.home.queueSongs,\n});\n\nexport default connect(mapStateToProps, MapDispatchToProps)(Audio);\n"]},"metadata":{},"sourceType":"module"}