{"ast":null,"code":"import _objectSpread from\"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import global from\"../global\";// import { Base64 } from 'js-base64';\nimport store from\"../configStore\";// import history from '../history';\nimport{logoutSuccess}from\"../Actions\";var globalUrl=global.config.apiUrl;export default{post:function post(url,data,headerData,version){var header=headerData===\"header\"?{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}:{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:global.getToken()},body:JSON.stringify(data)};var apiUrl=globalUrl+url;return fetch(apiUrl,header).then(function(response){// if (response.ok) {\nreturn response.json().then(function(json){if(response.status===401){// localStorage.clear();\n// history.push(\"/login\");\nstore.dispatch(logoutSuccess());}return Promise.resolve({responseData:json,response:response});}).catch(function(err){return Promise.resolve({response:response});});}).catch(function(err){throw err;});},postForm:function postForm(url,data,headerData,version){var header=headerData===\"header\"?{method:\"POST\",body:data,headers:{\"Content-Type\":\"application/json\"}}:{method:\"POST\",headers:{Accept:\"application/json\",authorization:global.getToken()},body:data};var apiUrl=globalUrl+url;return fetch(apiUrl,header).then(function(response){// if (response.ok) {\nreturn response.json().then(function(json){if(response.status===401){// localStorage.clear();\n// history.push(\"/login\");\nstore.dispatch(logoutSuccess());}return Promise.resolve({responseData:json,response:response});}).catch(function(err){return Promise.resolve({response:response});});}).catch(function(err){throw err;});},postWithBasicAuth:function postWithBasicAuth(url,data,headerData){var header={method:\"POST\",headers:{// 'Authorization': \"Basic \" + Base64.encode(\"UniversityBuddy:UniversityBuddy\")\nAuthorization:\"Basic \"+btoa(\"UniversityBuddy:UniversityBuddy\")},body:JSON.stringify(data)};return fetch(globalUrl+url,header).then(function(response){// if (response.ok) {\nreturn response.json().then(function(json){if(response.status===401){// localStorage.clear();\n// history.push(\"/login\");\nstore.dispatch(logoutSuccess());}return Promise.resolve({responseData:json,response:response});}).catch(function(err){return Promise.resolve({response:response});});}).catch(function(err){throw err;});},put:function put(url,data,basicAuth){// let token = \"Basic \" + Base64.encode(\"UniversityBuddy:UniversityBuddy\")\nvar token=\"Basic \"+btoa(\"UniversityBuddy:UniversityBuddy\");var header=data?{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:basicAuth&&basicAuth.basicAuth?token:global.getToken()},body:JSON.stringify(data)}:{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:basicAuth&&basicAuth.basicAuth?token:global.getToken()}};return fetch(globalUrl+url,header).then(function(response){return response.json().then(function(json){if(response.status===401){// localStorage.clear();\n// history.push(\"/login\");\nstore.dispatch(logoutSuccess());}return Promise.resolve({responseData:json,response:response});}).catch(function(err){return Promise.resolve({response:response});});}).catch(function(err){throw err;});},get:function get(url,version){// let header =\n//   noHeader && noHeader.noHeader\n//     ? {\n//         method: \"GET\",\n//       }\n//     : {\n//         method: \"GET\",\n//         headers: {\n//           Authorization: global.getToken(),\n//           \"Content-Type\": \"audio/mpeg\",\n//         },\n//       };\nvar apiUrl=globalUrl+url;return fetch(apiUrl,{method:\"GET\",headers:{Authorization:global.getToken(),\"Content-Type\":\"audio/mpeg\"}}).then(function(response){// if (response.ok) {\nreturn response.json().then(function(json){if(response.status===401){// localStorage.clear();\n// history.push(\"/login\");\nstore.dispatch(logoutSuccess());}return Promise.resolve({responseData:json,response:response});}).catch(function(err){return Promise.resolve({response:response});});}).catch(function(err){throw err;});},getWithBasicHeader:function getWithBasicHeader(url){var token=\"Basic \"+btoa(\"UniversityBuddy:UniversityBuddy\");return fetch(globalUrl+url,{method:\"GET\",headers:{Authorization:token}}).then(function(response){// if (response.ok) {\nreturn response.json().then(function(json){if(response.status===401){// localStorage.clear();\n// history.push(\"/login\");\nstore.dispatch(logoutSuccess());}return Promise.resolve({responseData:json,response:response});}).catch(function(err){return Promise.resolve({response:response});});}).catch(function(err){throw err;});},delete:function _delete(url,data){return fetch(globalUrl+url,_objectSpread({method:\"DELETE\",headers:{Authorization:global.getToken()}},data?{body:data}:\"\")).then(function(response){return response.json().then(function(json){if(response.status===401){// localStorage.clear();\n// history.push(\"/login\");\nstore.dispatch(logoutSuccess());}return Promise.resolve({responseData:json,response:response});});}).catch(function(err){throw err;});},patch:function patch(url,data){// let header = data ? {\nvar header=_objectSpread({method:\"PATCH\",headers:{Authorization:global.getToken()}},data&&{body:JSON.stringify(data)});// : {\n//         method: 'PATCH',\n//         headers: {\n//             'Authorization': global.getToken()\n//         },\n//     };\nreturn fetch(globalUrl+url,header).then(function(response){return response.json().then(function(json){if(response.status===401){// localStorage.clear();\n// history.push(\"/login\");\nstore.dispatch(logoutSuccess());}return Promise.resolve({responseData:json,response:response});});}).catch(function(err){throw err;});}};","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/service_api/index.js"],"names":["global","store","logoutSuccess","globalUrl","config","apiUrl","post","url","data","headerData","version","header","method","headers","body","JSON","stringify","Authorization","getToken","fetch","then","response","json","status","dispatch","Promise","resolve","responseData","catch","err","postForm","Accept","authorization","postWithBasicAuth","btoa","put","basicAuth","token","get","getWithBasicHeader","delete","patch"],"mappings":"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","sourcesContent":["import global from \"../global\";\n// import { Base64 } from 'js-base64';\nimport store from \"../configStore\";\n// import history from '../history';\nimport { logoutSuccess } from \"../Actions\";\n\nconst globalUrl = global.config.apiUrl;\n\nexport default {\n  post: (url, data, headerData, version) => {\n    let header =\n      headerData === \"header\"\n        ? {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n          }\n        : {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: global.getToken(),\n            },\n            body: JSON.stringify(data),\n          };\n    let apiUrl = globalUrl + url;\n    return fetch(apiUrl, header)\n      .then((response) => {\n        // if (response.ok) {\n        return response\n          .json()\n          .then((json) => {\n            if (response.status === 401) {\n              // localStorage.clear();\n              // history.push(\"/login\");\n              store.dispatch(logoutSuccess());\n            }\n            return Promise.resolve({\n              responseData: json,\n              response: response,\n            });\n          })\n          .catch((err) => {\n            return Promise.resolve({\n              response: response,\n            });\n          });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n  postForm: (url, data, headerData, version) => {\n    let header =\n      headerData === \"header\"\n        ? {\n            method: \"POST\",\n            body: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        : {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              authorization: global.getToken(),\n            },\n            body: data,\n          };\n\n    let apiUrl = globalUrl + url;\n    return fetch(apiUrl, header)\n      .then((response) => {\n        // if (response.ok) {\n        return response\n          .json()\n          .then((json) => {\n            if (response.status === 401) {\n              // localStorage.clear();\n              // history.push(\"/login\");\n              store.dispatch(logoutSuccess());\n            }\n            return Promise.resolve({\n              responseData: json,\n              response: response,\n            });\n          })\n          .catch((err) => {\n            return Promise.resolve({\n              response: response,\n            });\n          });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n  postWithBasicAuth: (url, data, headerData) => {\n    let header = {\n      method: \"POST\",\n      headers: {\n        // 'Authorization': \"Basic \" + Base64.encode(\"UniversityBuddy:UniversityBuddy\")\n        Authorization: \"Basic \" + btoa(\"UniversityBuddy:UniversityBuddy\"),\n      },\n      body: JSON.stringify(data),\n    };\n    return fetch(globalUrl + url, header)\n      .then((response) => {\n        // if (response.ok) {\n        return response\n          .json()\n          .then((json) => {\n            if (response.status === 401) {\n              // localStorage.clear();\n              // history.push(\"/login\");\n              store.dispatch(logoutSuccess());\n            }\n            return Promise.resolve({\n              responseData: json,\n              response: response,\n            });\n          })\n          .catch((err) => {\n            return Promise.resolve({\n              response: response,\n            });\n          });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n  put: (url, data, basicAuth) => {\n    // let token = \"Basic \" + Base64.encode(\"UniversityBuddy:UniversityBuddy\")\n    let token = \"Basic \" + btoa(\"UniversityBuddy:UniversityBuddy\");\n    let header = data\n      ? {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization:\n              basicAuth && basicAuth.basicAuth ? token : global.getToken(),\n          },\n          body: JSON.stringify(data),\n        }\n      : {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization:\n              basicAuth && basicAuth.basicAuth ? token : global.getToken(),\n          },\n        };\n    return fetch(globalUrl + url, header)\n      .then((response) => {\n        return response\n          .json()\n          .then((json) => {\n            if (response.status === 401) {\n              // localStorage.clear();\n              // history.push(\"/login\");\n              store.dispatch(logoutSuccess());\n            }\n            return Promise.resolve({\n              responseData: json,\n              response: response,\n            });\n          })\n          .catch((err) => {\n            return Promise.resolve({\n              response: response,\n            });\n          });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n\n  get: (url, version) => {\n    // let header =\n    //   noHeader && noHeader.noHeader\n    //     ? {\n    //         method: \"GET\",\n    //       }\n    //     : {\n    //         method: \"GET\",\n    //         headers: {\n    //           Authorization: global.getToken(),\n    //           \"Content-Type\": \"audio/mpeg\",\n    //         },\n    //       };\n    let apiUrl = globalUrl + url;\n    return fetch(apiUrl, {\n      method: \"GET\",\n      headers: {\n        Authorization: global.getToken(),\n        \"Content-Type\": \"audio/mpeg\",\n      },\n    })\n      .then((response) => {\n        // if (response.ok) {\n        return response\n          .json()\n          .then((json) => {\n            if (response.status === 401) {\n              // localStorage.clear();\n              // history.push(\"/login\");\n              store.dispatch(logoutSuccess());\n            }\n            return Promise.resolve({\n              responseData: json,\n              response: response,\n            });\n          })\n          .catch((err) => {\n            return Promise.resolve({\n              response: response,\n            });\n          });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n\n  getWithBasicHeader: (url) => {\n    let token = \"Basic \" + btoa(\"UniversityBuddy:UniversityBuddy\");\n    return fetch(globalUrl + url, {\n      method: \"GET\",\n      headers: {\n        Authorization: token,\n      },\n    })\n      .then((response) => {\n        // if (response.ok) {\n        return response\n          .json()\n          .then((json) => {\n            if (response.status === 401) {\n              // localStorage.clear();\n              // history.push(\"/login\");\n              store.dispatch(logoutSuccess());\n            }\n            return Promise.resolve({\n              responseData: json,\n              response: response,\n            });\n          })\n          .catch((err) => {\n            return Promise.resolve({\n              response: response,\n            });\n          });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n\n  delete: (url, data) => {\n    return fetch(globalUrl + url, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: global.getToken(),\n      },\n      ...(data ? { body: data } : \"\"),\n    })\n      .then((response) => {\n        return response.json().then((json) => {\n          if (response.status === 401) {\n            // localStorage.clear();\n            // history.push(\"/login\");\n            store.dispatch(logoutSuccess());\n          }\n          return Promise.resolve({\n            responseData: json,\n            response: response,\n          });\n        });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n\n  patch: (url, data) => {\n    // let header = data ? {\n    let header = {\n      method: \"PATCH\",\n      headers: {\n        Authorization: global.getToken(),\n      },\n      ...(data && { body: JSON.stringify(data) }),\n    };\n    // : {\n    //         method: 'PATCH',\n    //         headers: {\n    //             'Authorization': global.getToken()\n    //         },\n    //     };\n    return fetch(globalUrl + url, header)\n      .then((response) => {\n        return response.json().then((json) => {\n          if (response.status === 401) {\n            // localStorage.clear();\n            // history.push(\"/login\");\n            store.dispatch(logoutSuccess());\n          }\n          return Promise.resolve({\n            responseData: json,\n            response: response,\n          });\n        });\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}