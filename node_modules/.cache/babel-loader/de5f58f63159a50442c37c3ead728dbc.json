{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"./Reducers\";\nimport Api from \"./service_api/index\"; // confi;\n// const composeEnhancers = composeWithDevTools({\n//     realtime: true\n// });\n\nconst middlewares = [thunk.withExtraArgument(Api)];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middlewares.push(createLogger({\n    colors: {\n      title: () => \"inherit\",\n      prevState: () => \"red\",\n      action: () => \"#03A9F4\",\n      nextState: () => \"#4CAF50\",\n      error: () => \"#F20404\"\n    }\n  }));\n} // const store = createStore(reducer, composeEnhancers(applyMiddleware(...middlewares)));\n// const store = createStore(reducer, applyMiddleware(...middlewares));\n\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middlewares) // other store enhancers if any\n));\nexport default store;","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/configStore.js"],"names":["createStore","applyMiddleware","thunk","createLogger","composeWithDevTools","reducer","Api","middlewares","withExtraArgument","process","env","NODE_ENV","push","colors","title","prevState","action","nextState","error","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAACL,KAAK,CAACM,iBAAN,CAAwBF,GAAxB,CAAD,CAApB;;AACA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCJ,EAAAA,WAAW,CAACK,IAAZ,CACET,YAAY,CAAC;AACXU,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,MAAM,SADP;AAENC,MAAAA,SAAS,EAAE,MAAM,KAFX;AAGNC,MAAAA,MAAM,EAAE,MAAM,SAHR;AAINC,MAAAA,SAAS,EAAE,MAAM,SAJX;AAKNC,MAAAA,KAAK,EAAE,MAAM;AALP;AADG,GAAD,CADd;AAWD,C,CAED;AACA;;;AACA,MAAMC,KAAK,GAAGnB,WAAW,CACvBK,OADuB,EAEvBD,mBAAmB,CACjBH,eAAe,CAAC,GAAGM,WAAJ,CADE,CAEjB;AAFiB,CAFI,CAAzB;AAOA,eAAeY,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"./Reducers\";\nimport Api from \"./service_api/index\";\n// confi;\n// const composeEnhancers = composeWithDevTools({\n//     realtime: true\n// });\n\nconst middlewares = [thunk.withExtraArgument(Api)];\nif (process.env.NODE_ENV !== \"production\") {\n  middlewares.push(\n    createLogger({\n      colors: {\n        title: () => \"inherit\",\n        prevState: () => \"red\",\n        action: () => \"#03A9F4\",\n        nextState: () => \"#4CAF50\",\n        error: () => \"#F20404\",\n      },\n    })\n  );\n}\n\n// const store = createStore(reducer, composeEnhancers(applyMiddleware(...middlewares)));\n// const store = createStore(reducer, applyMiddleware(...middlewares));\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(...middlewares)\n    // other store enhancers if any\n  )\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}