{"ast":null,"code":"import SetAuthToken from \"../Utils/SetAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport history from \"../history\";\nimport { SET_CURRENT_USER, USER_LOADING, GET_ERRORS } from \"../ActionTypes/ActionTypes.jsx\";\nimport data from \"@iconify-icons/ion/md-volume-low\";\nexport const registerUser = (userData, history) => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => history.push(\"/home-page\")).catch(err => dispatch({\n      type: GET_ERRORS,\n      payload: err\n    }));\n  };\n};\nexport const loginUser = userData => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(data => {\n      if (data.errors) {\n        returnData = {\n          isError: true,\n          status: 404,\n          error: data.errors[0].message,\n          data: []\n        };\n      } else {\n        returnData = {\n          isError: false,\n          status: 200,\n          error: \"\",\n          data: data\n        };\n      }\n    }).catch(error => {\n      returnData = {\n        isError: true,\n        status: 500,\n        error: error,\n        data: []\n      };\n    });\n    return returnData; // .then((res) => {\n    //   res.json().then((json) => {\n    //     if (json.token) {\n    //       const token = json.token;\n    //       localStorage.setItem(\"jwtToken\", token);\n    //       SetAuthToken(token);\n    //       const decoded = jwt_decode(token);\n    //       dispatch(setCurrentUser(decoded));\n    //       history.push({\n    //         pathname: \"/home\",\n    //       });\n    //     } else {\n    //       dispatch({\n    //         type: GET_ERRORS,\n    //         payload: json,\n    //       });\n    //     }\n    //   });\n    // });\n  };\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  SetAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Actions/Auth.jsx"],"names":["SetAuthToken","jwt_decode","history","SET_CURRENT_USER","USER_LOADING","GET_ERRORS","data","registerUser","userData","dispatch","url","response","fetch","method","headers","Accept","body","JSON","stringify","then","res","push","catch","err","type","payload","loginUser","errors","returnData","isError","status","error","message","setCurrentUser","decoded","setUserLoading","logoutUser","localStorage","removeItem"],"mappings":"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","sourcesContent":["import SetAuthToken from \"../Utils/SetAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport history from \"../history\";\n\nimport {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  GET_ERRORS,\n} from \"../ActionTypes/ActionTypes.jsx\";\nimport data from \"@iconify-icons/ion/md-volume-low\";\n\nexport const registerUser = (userData, history) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((res) => history.push(\"/home-page\"))\n      .catch((err) =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err,\n        })\n      );\n  };\n};\n\nexport const loginUser = (userData) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((data) => {\n        if (data.errors) {\n          returnData = {\n            isError: true,\n            status: 404,\n            error: data.errors[0].message,\n            data: [],\n          };\n        } else {\n          returnData = {\n            isError: false,\n            status: 200,\n            error: \"\",\n            data: data,\n          };\n        }\n      })\n      .catch((error) => {\n        returnData = {\n          isError: true,\n          status: 500,\n          error: error,\n          data: [],\n        };\n      });\n    return returnData;\n\n    // .then((res) => {\n    //   res.json().then((json) => {\n    //     if (json.token) {\n    //       const token = json.token;\n    //       localStorage.setItem(\"jwtToken\", token);\n    //       SetAuthToken(token);\n    //       const decoded = jwt_decode(token);\n    //       dispatch(setCurrentUser(decoded));\n    //       history.push({\n    //         pathname: \"/home\",\n    //       });\n    //     } else {\n    //       dispatch({\n    //         type: GET_ERRORS,\n    //         payload: json,\n    //       });\n    //     }\n    //   });\n    // });\n  };\n};\n\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  SetAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}