{"ast":null,"code":"// import SetAuthToken from \"../utils/SetAuthToken.jsx\";\n// import jwt_decode from \"jwt-decode\";\n// import {\n//   SET_CURRENT_USER,\n//   USER_LOADING,\n//   GET_ERRORS,\n// } from \"../ActionType/ActionType.jsx\";\nexport const registerUser = (userData, history) => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => history.push(\"/sign-in\")).catch(err => dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    }));\n  };\n};\nexport const loginUser = userData => {\n  console.log(userData);\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => {\n      res.json().then(json => {\n        const token = json.token;\n        localStorage.setItem(\"jwtToken\", token);\n        SetAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded));\n      });\n    });\n  };\n}; // export const setCurrentUser = (decoded) => {\n//   return {\n//     type: SET_CURRENT_USER,\n//     payload: decoded,\n//   };\n// };\n// export const setUserLoading = () => {\n//   return {\n//     type: USER_LOADING,\n//   };\n// };\n// export const logoutUser = () => (dispatch) => {\n//   localStorage.removeItem(\"jwtToken\");\n//   SetAuthToken(false);\n//   dispatch(setCurrentUser({}));\n// };","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Actions/Auth.jsx"],"names":["registerUser","userData","history","dispatch","url","response","fetch","method","headers","Accept","body","JSON","stringify","then","res","push","catch","err","type","GET_ERRORS","payload","data","loginUser","console","log","json","token","localStorage","setItem","SetAuthToken","decoded","jwt_decode","setCurrentUser"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACjD,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,GAAG,GAAG,qCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAChCG,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAN0B,KAAN,CAAL,CAQpBY,IARoB,CAQdC,GAAD,IAASZ,OAAO,CAACa,IAAR,CAAa,UAAb,CARM,EASpBC,KAToB,CASbC,GAAD,IACLd,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEC,UADC;AAEPC,MAAAA,OAAO,EAAEH,GAAG,CAACZ,QAAJ,CAAagB;AAFf,KAAD,CAVW,CAAvB;AAeD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMC,SAAS,GAAIrB,QAAD,IAAc;AACrCsB,EAAAA,OAAO,CAACC,GAAR,CAAYvB,QAAZ;AACA,SAAO,MAAOE,QAAP,IAAoB;AACzB,UAAMC,GAAG,GAAG,kCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAChCG,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAN0B,KAAN,CAAL,CAOpBY,IAPoB,CAOdC,GAAD,IAAS;AACfA,MAAAA,GAAG,CAACW,IAAJ,GAAWZ,IAAX,CAAiBY,IAAD,IAAU;AACxB,cAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAG,QAAAA,YAAY,CAACH,KAAD,CAAZ;AACA,cAAMI,OAAO,GAAGC,UAAU,CAACL,KAAD,CAA1B;AACAvB,QAAAA,QAAQ,CAAC6B,cAAc,CAACF,OAAD,CAAf,CAAR;AACD,OAND;AAOD,KAfsB,CAAvB;AAgBD,GAlBD;AAmBD,CArBM,C,CAuBP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import SetAuthToken from \"../utils/SetAuthToken.jsx\";\n// import jwt_decode from \"jwt-decode\";\n\n// import {\n//   SET_CURRENT_USER,\n//   USER_LOADING,\n//   GET_ERRORS,\n// } from \"../ActionType/ActionType.jsx\";\n\nexport const registerUser = (userData, history) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((res) => history.push(\"/sign-in\"))\n      .catch((err) =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data,\n        })\n      );\n  };\n};\n\nexport const loginUser = (userData) => {\n  console.log(userData);\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    }).then((res) => {\n      res.json().then((json) => {\n        const token = json.token;\n        localStorage.setItem(\"jwtToken\", token);\n        SetAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded));\n      });\n    });\n  };\n};\n\n// export const setCurrentUser = (decoded) => {\n//   return {\n//     type: SET_CURRENT_USER,\n//     payload: decoded,\n//   };\n// };\n\n// export const setUserLoading = () => {\n//   return {\n//     type: USER_LOADING,\n//   };\n// };\n\n// export const logoutUser = () => (dispatch) => {\n//   localStorage.removeItem(\"jwtToken\");\n//   SetAuthToken(false);\n//   dispatch(setCurrentUser({}));\n// };\n"]},"metadata":{},"sourceType":"module"}