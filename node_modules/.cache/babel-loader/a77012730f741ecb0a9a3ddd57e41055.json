{"ast":null,"code":"import { TOP_CHART_MUSIC, NEW_RELEASES, SONG_DATA, RETRO_CLASSIC, RADIO_MUSIC, FEATURE_ARTISTS } from \"../ActionTypes/ActionTypes\";\nexport const topChartMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"topcharts/getAllMusic\").then(response => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: TOP_CHART_MUSIC,\n        payload: response.responseData\n      });\n    }\n\n    return response;\n  });\n};\nexport const newReleaseMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"new-release/get-new-release\").then(response => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: NEW_RELEASES,\n        payload: response.responseData\n      });\n    }\n\n    return response;\n  });\n};\nexport const setMusicData = payload => dispatch => {\n  return dispatch({\n    type: SONG_DATA,\n    payload: payload\n  });\n};\nexport const retroClassicMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"retro-classic/get-retro-classic\").then(response => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: RETRO_CLASSIC,\n        payload: response.responseData\n      });\n    }\n\n    return response;\n  });\n};\nexport const radioMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"radio/get-radio\").then(response => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: RADIO_MUSIC,\n        payload: response.responseData\n      });\n    }\n\n    return response;\n  });\n};\nexport const featureArtists = () => (dispatch, getState, Api) => {\n  return Api.get(\"feature-artists/all-feature-artists\").then(response => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: FEATURE_ARTISTS,\n        payload: response.responseData\n      });\n    }\n\n    return response;\n  });\n};","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Actions/HomePageApi.jsx"],"names":["TOP_CHART_MUSIC","NEW_RELEASES","SONG_DATA","RETRO_CLASSIC","RADIO_MUSIC","FEATURE_ARTISTS","topChartMusic","dispatch","getState","Api","get","then","response","status","type","payload","responseData","newReleaseMusic","setMusicData","retroClassicMusic","radioMusic","featureArtists"],"mappings":"AAAA,SACEA,eADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,eANF,QAOO,4BAPP;AASA,OAAO,MAAMC,aAAa,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC9D,SAAOA,GAAG,CAACC,GAAJ,CAAQ,uBAAR,EAAiCC,IAAjC,CAAuCC,QAAD,IAAc;AACzD,QAAIA,QAAQ,CAACA,QAAT,CAAkBC,MAAlB,KAA6B,GAAjC,EAAsC;AACpCN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEd,eADC;AAEPe,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,OAAD,CAAR;AAID;;AACD,WAAOJ,QAAP;AACD,GARM,CAAP;AASD,CAVM;AAYP,OAAO,MAAMK,eAAe,GAAG,MAAM,CAACV,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAChE,SAAOA,GAAG,CAACC,GAAJ,CAAQ,6BAAR,EAAuCC,IAAvC,CAA6CC,QAAD,IAAc;AAC/D,QAAIA,QAAQ,CAACA,QAAT,CAAkBC,MAAlB,KAA6B,GAAjC,EAAsC;AACpCN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEb,YADC;AAEPc,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,OAAD,CAAR;AAID;;AACD,WAAOJ,QAAP;AACD,GARM,CAAP;AASD,CAVM;AAYP,OAAO,MAAMM,YAAY,GAAIH,OAAD,IAAcR,QAAD,IAAc;AACrD,SAAOA,QAAQ,CAAC;AACdO,IAAAA,IAAI,EAAEZ,SADQ;AAEda,IAAAA,OAAO,EAAEA;AAFK,GAAD,CAAf;AAID,CALM;AAOP,OAAO,MAAMI,iBAAiB,GAAG,MAAM,CAACZ,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAClE,SAAOA,GAAG,CAACC,GAAJ,CAAQ,iCAAR,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AACnE,QAAIA,QAAQ,CAACA,QAAT,CAAkBC,MAAlB,KAA6B,GAAjC,EAAsC;AACpCN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEX,aADC;AAEPY,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,OAAD,CAAR;AAID;;AACD,WAAOJ,QAAP;AACD,GARM,CAAP;AASD,CAVM;AAYP,OAAO,MAAMQ,UAAU,GAAG,MAAM,CAACb,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC3D,SAAOA,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2BC,IAA3B,CAAiCC,QAAD,IAAc;AACnD,QAAIA,QAAQ,CAACA,QAAT,CAAkBC,MAAlB,KAA6B,GAAjC,EAAsC;AACpCN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEV,WADC;AAEPW,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,OAAD,CAAR;AAID;;AACD,WAAOJ,QAAP;AACD,GARM,CAAP;AASD,CAVM;AAYP,OAAO,MAAMS,cAAc,GAAG,MAAM,CAACd,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC/D,SAAOA,GAAG,CAACC,GAAJ,CAAQ,qCAAR,EAA+CC,IAA/C,CAAqDC,QAAD,IAAc;AACvE,QAAIA,QAAQ,CAACA,QAAT,CAAkBC,MAAlB,KAA6B,GAAjC,EAAsC;AACpCN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAET,eADC;AAEPU,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,OAAD,CAAR;AAID;;AACD,WAAOJ,QAAP;AACD,GARM,CAAP;AASD,CAVM","sourcesContent":["import {\n  TOP_CHART_MUSIC,\n  NEW_RELEASES,\n  SONG_DATA,\n  RETRO_CLASSIC,\n  RADIO_MUSIC,\n  FEATURE_ARTISTS,\n} from \"../ActionTypes/ActionTypes\";\n\nexport const topChartMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"topcharts/getAllMusic\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: TOP_CHART_MUSIC,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const newReleaseMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"new-release/get-new-release\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: NEW_RELEASES,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const setMusicData = (payload) => (dispatch) => {\n  return dispatch({\n    type: SONG_DATA,\n    payload: payload,\n  });\n};\n\nexport const retroClassicMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"retro-classic/get-retro-classic\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: RETRO_CLASSIC,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const radioMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"radio/get-radio\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: RADIO_MUSIC,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const featureArtists = () => (dispatch, getState, Api) => {\n  return Api.get(\"feature-artists/all-feature-artists\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: FEATURE_ARTISTS,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}