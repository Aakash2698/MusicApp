{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/Audio/Audio.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Audio.scss\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport songImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport mdPlay from \"@iconify-icons/ion/md-play\";\nimport mdSync from \"@iconify-icons/ion/md-sync\";\nimport musicalNote from \"@iconify-icons/ion/musical-note\";\nimport music from \"../../../Assets/Musics/test.mp3\";\nimport mdVolumeLow from \"@iconify-icons/ion/md-volume-low\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { normalizeUnits } from \"moment\";\nimport { getActiveIndex } from \"../../../Actions\";\nimport logger from \"redux-logger\";\n\nclass Audio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dropdownExpand: false,\n      volumeSlider: false,\n      closeAudioControl: false,\n      index: 0,\n      onPlay: \"http://localhost:4000/uploads/1608011825737.mp3\",\n      songName: \"Ek Tarfa(Reprise)\",\n      songArtist: \"Darshan Raval\",\n      songImage: \"http://localhost:4000/uploads/1608114760948.jpg\",\n      shuffle: false,\n      playSongs: [],\n      prevIndex: []\n    };\n\n    this.handleDropdownChange = () => {\n      this.setState({\n        dropdownExpand: !this.state.dropdownExpand\n      });\n    };\n\n    this.openVolumeSlider = () => {\n      this.setState({\n        volumeSlider: !this.state.volumeSlider\n      });\n    };\n\n    this.popupActionClick = e => {\n      if (this.node.contains(e.target)) {\n        this.setState({\n          closeAudioControl: true\n        });\n        return true;\n      }\n\n      this.setState({\n        closeAudioControl: false\n      });\n    };\n\n    this.nextSong = () => {\n      if (this.state.shuffle) {\n        const shuffleValue = Math.floor(Math.random(0, this.state.playSongs.length) * 10);\n        this.setState({\n          prevIndex: this.state.prevIndex.push(this.state.index)\n        }, () => {\n          this.setState({\n            index: shuffleValue\n          }, () => {\n            this.setState({\n              onPlay: this.state.playSongs[this.state.index].songUrl,\n              songName: this.state.playSongs[this.state.index].songName,\n              songArtist: this.state.playSongs[this.state.index].artistName,\n              songImage: this.state.playSongs[this.state.index].songImage\n            }, () => {\n              this.props.getActiveIndex(this.state.index);\n            });\n          });\n        });\n      } else {\n        if (this.state.index === this.state.playSongs.length - 1) {\n          this.setState({\n            index: 0\n          }, () => {\n            this.setState({\n              onPlay: this.state.playSongs[this.state.index].songUrl,\n              songName: this.state.playSongs[this.state.index].songName,\n              songArtist: this.state.playSongs[this.state.index].artistName,\n              songImage: this.state.playSongs[this.state.index].songImage\n            }, () => {\n              this.props.getActiveIndex(this.state.index);\n            });\n          });\n        } else {\n          this.setState({\n            index: this.state.index + 1\n          }, () => {\n            this.setState({\n              onPlay: this.state.playSongs[this.state.index].songUrl,\n              songName: this.state.playSongs[this.state.index].songName,\n              songArtist: this.state.playSongs[this.state.index].artistName,\n              songImage: this.state.playSongs[this.state.index].songImage\n            }, () => {\n              this.props.getActiveIndex(this.state.index);\n            });\n          });\n        }\n      }\n    };\n\n    this.previousSong = () => {\n      if (this.state.shuffle) {\n        this.setState({\n          index: this.state.prevIndex\n        }, () => {\n          this.setState({\n            onPlay: this.state.playSongs[this.state.index].songUrl,\n            songName: this.state.playSongs[this.state.index].songName,\n            songArtist: this.state.playSongs[this.state.index].artistName,\n            songImage: this.state.playSongs[this.state.index].songImage\n          }, () => {\n            this.props.getActiveIndex(this.state.index);\n          });\n        });\n      } else {\n        if (this.state.index === 0) {\n          this.setState({\n            index: 0\n          }, () => {\n            this.setState({\n              onPlay: this.state.playSongs[this.state.index].songUrl,\n              songName: this.state.playSongs[this.state.index].songName,\n              songArtist: this.state.playSongs[this.state.index].artistName,\n              songImage: this.state.playSongs[this.state.index].songImage\n            }, () => {\n              this.props.getActiveIndex(this.state.index);\n            });\n          });\n        } else {\n          this.setState({\n            index: this.state.index - 1\n          }, () => {\n            this.setState({\n              onPlay: this.state.playSongs[this.state.index].songUrl,\n              songName: this.state.playSongs[this.state.index].songName,\n              songArtist: this.state.playSongs[this.state.index].artistName,\n              songImage: this.state.playSongs[this.state.index].songImage\n            }, () => {\n              this.props.getActiveIndex(this.state.index);\n            });\n          });\n        }\n      }\n    };\n\n    this.shuffleStart = () => {\n      this.setState({\n        shuffle: !this.state.shuffle\n      });\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentIndex) {\n      this.setState({\n        playSongs: nextProps.currentSongData,\n        index: nextProps.currentIndex\n      }, () => {\n        this.setState({\n          onPlay: nextProps.currentSongData[this.state.index].songUrl,\n          songName: nextProps.currentSongData[this.state.index].songName,\n          songArtist: nextProps.currentSongData[this.state.index].artistName,\n          songImage: nextProps.currentSongData[this.state.index].songImage\n        }, () => {\n          this.props.getActiveIndex(this.state.index);\n        });\n      });\n    } else {\n      this.setState({\n        playSongs: nextProps.currentSongData,\n        index: 0\n      }, () => {\n        this.setState({\n          onPlay: nextProps.currentSongData[this.state.index].songUrl,\n          songName: nextProps.currentSongData[this.state.index].songName,\n          songArtist: nextProps.currentSongData[this.state.index].artistName,\n          songImage: nextProps.currentSongData[this.state.index].songImage\n        }, () => {\n          this.props.getActiveIndex(this.state.index);\n        });\n      });\n    }\n  } // startLoop = () => {\n  //   console.log(\"hello\");\n  //   this.setState(\n  //     {\n  //       loopSong: !this.state.loopSong,\n  //       // index: this.state.index,\n  //     },\n  //     () => {\n  //       console.log(this.state.loopSong);\n  //       // this.setState({\n  //       //   onPlay: this.state.playSongs[this.state.index].songUrl,\n  //       //   songName: this.state.playSongs[this.state.index].songName,\n  //       //   songArtist: this.state.playSongs[this.state.index].artist,\n  //       //   songImage: this.state.playSongs[this.state.index].songImage,\n  //       // });\n  //     }\n  //   );\n  // };\n\n\n  render() {\n    const {\n      dropdownExpand,\n      volumeSlider,\n      onPlay,\n      songName,\n      songArtist,\n      songImage,\n      closeAudioControl,\n      loopSong\n    } = this.state;\n    const loop = loopSong;\n    const fullWidth = this.props;\n    console.log(typeof loopSong);\n    let audioClass;\n\n    if (fullWidth.fullWidth) {\n      audioClass = \"audioPlayer long-player\";\n    } else {\n      audioClass = \"audioPlayer\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: audioClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: songImage,\n            alt: \"song-image\",\n            className: \"song-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info pl-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-title\",\n            children: songName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-artist\",\n            children: songArtist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-controls--left d-flex mr-auto\",\n          children: /*#__PURE__*/_jsxDEV(AudioPlayer, {\n            loop: loop,\n            src: onPlay,\n            onClickNext: this.nextSong,\n            onClickPrevious: this.previousSong // autoPlay={true}\n            ,\n            showSkipControls: true,\n            showJumpControls: false,\n            customProgressBarSection: [RHAP_UI.PROGRESS_BAR],\n            customVolumeControls: [closeAudioControl && volumeSlider ? RHAP_UI.VOLUME : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n              ref: node => this.node = node,\n              className: \"btn btn-icon-only\",\n              onClick: this.openVolumeSlider,\n              style: {\n                position: \"absolute\",\n                right: \"105px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"iconify audio-player-icon\",\n                \"data-icon\": \"ion-md-volume-low\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)],\n            customControlsSection: [RHAP_UI.LOOP, // <button className=\"btn btn-icon-only\" onClick={this.startLoop}>\n            //   {/* <span\n            //     className=\"audio-player-icon iconify\"\n            //     data-icon=\"ion-md-sync\"\n            //     data-inline=\"false\"\n            //   ></span> */}\n            // </button>,\n            RHAP_UI.MAIN_CONTROLS, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon-only amplitude-shuffle amplitude-shuffle-on\",\n              onClick: this.shuffleStart,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"audio-player-icon iconify\",\n                \"data-icon\": \"ion-md-shuffle\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), RHAP_UI.CURRENT_TIME, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"or-arrow\",\n              children: \" / \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), RHAP_UI.DURATION, RHAP_UI.VOLUME_CONTROLS]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropleft\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon-only\",\n            onClick: this.handleDropdownChange,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"iconify audio-player-icon\",\n              \"data-icon\": \"fe:elipsis-v\",\n              \"data-inline\": \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ActionPopover, {\n            dropdownExpand: dropdownExpand,\n            transform: \"translate3d(-162px, -143px, 0px)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon-only\",\n          onClick: this.props.handleOpenSidebar,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"music-icon\",\n            icon: musicalNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentSongData: state.home.songData,\n  currentIndex: state.home.index\n});\n\nexport default connect(mapStateToProps, {\n  getActiveIndex\n})(Audio);","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/Audio/Audio.jsx"],"names":["React","Component","AudioPlayer","RHAP_UI","ReactAudioPlayer","songImage","Icon","InlineIcon","mdPlay","mdSync","musicalNote","music","mdVolumeLow","ActionPopover","connect","normalizeUnits","getActiveIndex","logger","Audio","state","dropdownExpand","volumeSlider","closeAudioControl","index","onPlay","songName","songArtist","shuffle","playSongs","prevIndex","handleDropdownChange","setState","openVolumeSlider","popupActionClick","e","node","contains","target","nextSong","shuffleValue","Math","floor","random","length","push","songUrl","artistName","props","previousSong","shuffleStart","componentWillMount","document","addEventListener","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","currentIndex","currentSongData","render","loopSong","loop","fullWidth","console","log","audioClass","PROGRESS_BAR","VOLUME","position","right","LOOP","MAIN_CONTROLS","CURRENT_TIME","DURATION","VOLUME_CONTROLS","handleOpenSidebar","mapStateToProps","home","songData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Audio.scss\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport songImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport mdPlay from \"@iconify-icons/ion/md-play\";\nimport mdSync from \"@iconify-icons/ion/md-sync\";\nimport musicalNote from \"@iconify-icons/ion/musical-note\";\nimport music from \"../../../Assets/Musics/test.mp3\";\nimport mdVolumeLow from \"@iconify-icons/ion/md-volume-low\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { normalizeUnits } from \"moment\";\nimport { getActiveIndex } from \"../../../Actions\";\nimport logger from \"redux-logger\";\n\nclass Audio extends Component {\n  state = {\n    dropdownExpand: false,\n    volumeSlider: false,\n    closeAudioControl: false,\n    index: 0,\n    onPlay: \"http://localhost:4000/uploads/1608011825737.mp3\",\n    songName: \"Ek Tarfa(Reprise)\",\n    songArtist: \"Darshan Raval\",\n    songImage: \"http://localhost:4000/uploads/1608114760948.jpg\",\n    shuffle: false,\n    playSongs: [],\n    prevIndex: [],\n  };\n\n  handleDropdownChange = () => {\n    this.setState({\n      dropdownExpand: !this.state.dropdownExpand,\n    });\n  };\n  openVolumeSlider = () => {\n    this.setState({\n      volumeSlider: !this.state.volumeSlider,\n    });\n  };\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n  popupActionClick = (e) => {\n    if (this.node.contains(e.target)) {\n      this.setState({\n        closeAudioControl: true,\n      });\n      return true;\n    }\n    this.setState({\n      closeAudioControl: false,\n    });\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentIndex) {\n      this.setState(\n        {\n          playSongs: nextProps.currentSongData,\n          index: nextProps.currentIndex,\n        },\n        () => {\n          this.setState(\n            {\n              onPlay: nextProps.currentSongData[this.state.index].songUrl,\n              songName: nextProps.currentSongData[this.state.index].songName,\n              songArtist:\n                nextProps.currentSongData[this.state.index].artistName,\n              songImage: nextProps.currentSongData[this.state.index].songImage,\n            },\n            () => {\n              this.props.getActiveIndex(this.state.index);\n            }\n          );\n        }\n      );\n    } else {\n      this.setState(\n        {\n          playSongs: nextProps.currentSongData,\n          index: 0,\n        },\n        () => {\n          this.setState(\n            {\n              onPlay: nextProps.currentSongData[this.state.index].songUrl,\n              songName: nextProps.currentSongData[this.state.index].songName,\n              songArtist:\n                nextProps.currentSongData[this.state.index].artistName,\n              songImage: nextProps.currentSongData[this.state.index].songImage,\n            },\n            () => {\n              this.props.getActiveIndex(this.state.index);\n            }\n          );\n        }\n      );\n    }\n  }\n  // startLoop = () => {\n  //   console.log(\"hello\");\n  //   this.setState(\n  //     {\n  //       loopSong: !this.state.loopSong,\n  //       // index: this.state.index,\n  //     },\n  //     () => {\n  //       console.log(this.state.loopSong);\n  //       // this.setState({\n  //       //   onPlay: this.state.playSongs[this.state.index].songUrl,\n  //       //   songName: this.state.playSongs[this.state.index].songName,\n  //       //   songArtist: this.state.playSongs[this.state.index].artist,\n  //       //   songImage: this.state.playSongs[this.state.index].songImage,\n  //       // });\n  //     }\n  //   );\n  // };\n  nextSong = () => {\n    if (this.state.shuffle) {\n      const shuffleValue = Math.floor(\n        Math.random(0, this.state.playSongs.length) * 10\n      );\n\n      this.setState(\n        {\n          prevIndex: this.state.prevIndex.push(this.state.index),\n        },\n        () => {\n          this.setState(\n            {\n              index: shuffleValue,\n            },\n            () => {\n              this.setState(\n                {\n                  onPlay: this.state.playSongs[this.state.index].songUrl,\n                  songName: this.state.playSongs[this.state.index].songName,\n                  songArtist: this.state.playSongs[this.state.index].artistName,\n                  songImage: this.state.playSongs[this.state.index].songImage,\n                },\n                () => {\n                  this.props.getActiveIndex(this.state.index);\n                }\n              );\n            }\n          );\n        }\n      );\n    } else {\n      if (this.state.index === this.state.playSongs.length - 1) {\n        this.setState(\n          {\n            index: 0,\n          },\n          () => {\n            this.setState(\n              {\n                onPlay: this.state.playSongs[this.state.index].songUrl,\n                songName: this.state.playSongs[this.state.index].songName,\n                songArtist: this.state.playSongs[this.state.index].artistName,\n                songImage: this.state.playSongs[this.state.index].songImage,\n              },\n              () => {\n                this.props.getActiveIndex(this.state.index);\n              }\n            );\n          }\n        );\n      } else {\n        this.setState(\n          {\n            index: this.state.index + 1,\n          },\n          () => {\n            this.setState(\n              {\n                onPlay: this.state.playSongs[this.state.index].songUrl,\n                songName: this.state.playSongs[this.state.index].songName,\n                songArtist: this.state.playSongs[this.state.index].artistName,\n                songImage: this.state.playSongs[this.state.index].songImage,\n              },\n              () => {\n                this.props.getActiveIndex(this.state.index);\n              }\n            );\n          }\n        );\n      }\n    }\n  };\n\n  previousSong = () => {\n    if (this.state.shuffle) {\n      this.setState(\n        {\n          index: this.state.prevIndex,\n        },\n        () => {\n          this.setState(\n            {\n              onPlay: this.state.playSongs[this.state.index].songUrl,\n              songName: this.state.playSongs[this.state.index].songName,\n              songArtist: this.state.playSongs[this.state.index].artistName,\n              songImage: this.state.playSongs[this.state.index].songImage,\n            },\n            () => {\n              this.props.getActiveIndex(this.state.index);\n            }\n          );\n        }\n      );\n    } else {\n      if (this.state.index === 0) {\n        this.setState(\n          {\n            index: 0,\n          },\n          () => {\n            this.setState(\n              {\n                onPlay: this.state.playSongs[this.state.index].songUrl,\n                songName: this.state.playSongs[this.state.index].songName,\n                songArtist: this.state.playSongs[this.state.index].artistName,\n                songImage: this.state.playSongs[this.state.index].songImage,\n              },\n              () => {\n                this.props.getActiveIndex(this.state.index);\n              }\n            );\n          }\n        );\n      } else {\n        this.setState(\n          {\n            index: this.state.index - 1,\n          },\n          () => {\n            this.setState(\n              {\n                onPlay: this.state.playSongs[this.state.index].songUrl,\n                songName: this.state.playSongs[this.state.index].songName,\n                songArtist: this.state.playSongs[this.state.index].artistName,\n                songImage: this.state.playSongs[this.state.index].songImage,\n              },\n              () => {\n                this.props.getActiveIndex(this.state.index);\n              }\n            );\n          }\n        );\n      }\n    }\n  };\n\n  shuffleStart = () => {\n    this.setState({\n      shuffle: !this.state.shuffle,\n    });\n  };\n\n  render() {\n    const {\n      dropdownExpand,\n      volumeSlider,\n      onPlay,\n      songName,\n      songArtist,\n      songImage,\n      closeAudioControl,\n      loopSong,\n    } = this.state;\n    const loop = loopSong;\n    const fullWidth = this.props;\n    console.log(typeof loopSong);\n    let audioClass;\n    if (fullWidth.fullWidth) {\n      audioClass = \"audioPlayer long-player\";\n    } else {\n      audioClass = \"audioPlayer\";\n    }\n    return (\n      <div className={audioClass}>\n        <div className=\"audio\">\n          <div className=\"song-image\">\n            <img src={songImage} alt=\"song-image\" className=\"song-img\" />\n          </div>\n          <div className=\"song-info pl-3\">\n            <span className=\"song-title\">{songName}</span>\n            <span className=\"song-artist\">{songArtist}</span>\n          </div>\n        </div>\n        <div className=\"audio-controls\">\n          <div className=\"audio-controls--left d-flex mr-auto\">\n            <AudioPlayer\n              loop={loop}\n              src={onPlay}\n              onClickNext={this.nextSong}\n              onClickPrevious={this.previousSong}\n              // autoPlay={true}\n              showSkipControls={true}\n              showJumpControls={false}\n              customProgressBarSection={[RHAP_UI.PROGRESS_BAR]}\n              customVolumeControls={[\n                closeAudioControl && volumeSlider ? RHAP_UI.VOLUME : \"\",\n                <button\n                  ref={(node) => (this.node = node)}\n                  className=\"btn btn-icon-only\"\n                  onClick={this.openVolumeSlider}\n                  style={{ position: \"absolute\", right: \"105px\" }}\n                >\n                  <span\n                    className=\"iconify audio-player-icon\"\n                    data-icon=\"ion-md-volume-low\"\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n              ]}\n              customControlsSection={[\n                RHAP_UI.LOOP,\n                // <button className=\"btn btn-icon-only\" onClick={this.startLoop}>\n                //   {/* <span\n                //     className=\"audio-player-icon iconify\"\n                //     data-icon=\"ion-md-sync\"\n                //     data-inline=\"false\"\n                //   ></span> */}\n                // </button>,\n\n                RHAP_UI.MAIN_CONTROLS,\n                <button\n                  className=\"btn btn-icon-only amplitude-shuffle amplitude-shuffle-on\"\n                  onClick={this.shuffleStart}\n                >\n                  <span\n                    className=\"audio-player-icon iconify\"\n                    data-icon=\"ion-md-shuffle\"\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n\n                RHAP_UI.CURRENT_TIME,\n                <div className=\"or-arrow\"> / </div>,\n                RHAP_UI.DURATION,\n                RHAP_UI.VOLUME_CONTROLS,\n              ]}\n            />\n          </div>\n        </div>\n        <div className=\"audio-info\">\n          <div className=\"dropleft\">\n            <button\n              className=\"btn btn-icon-only\"\n              onClick={this.handleDropdownChange}\n            >\n              <span\n                className=\"iconify audio-player-icon\"\n                data-icon=\"fe:elipsis-v\"\n                data-inline=\"false\"\n              ></span>\n            </button>\n            <ActionPopover\n              dropdownExpand={dropdownExpand}\n              transform=\"translate3d(-162px, -143px, 0px)\"\n            />\n          </div>\n          <button\n            className=\"btn btn-icon-only\"\n            onClick={this.props.handleOpenSidebar}\n          >\n            <Icon className=\"music-icon\" icon={musicalNote} />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  currentSongData: state.home.songData,\n  currentIndex: state.home.index,\n});\n\nexport default connect(mapStateToProps, { getActiveIndex })(Audio);\n"]},"metadata":{},"sourceType":"module"}