{"ast":null,"code":"import{TOP_CHART_MUSIC,NEW_RELEASES,SONG_DATA,RETRO_CLASSIC,RADIO_MUSIC,FEATURE_ARTISTS,ARTIST_DETAILS,TOP_CHART,GENRES,GENRES_MUSIC,RETRO_CLASSIC_MUSIC,ALL_SONGS,SONG_TYPE_DATA,SEARCH_DATA,ACTIVE_INDEX,DOWNLOAD_SONG,CLEAR_QUEUE,DELETE_QUEUE_SONG,LOGIN_DATA}from\"../ActionTypes/ActionTypes\";import fileDownload from\"js-file-download\";import download from\"downloadjs\";export var topChartMusic=function topChartMusic(){return function(dispatch,getState,Api){return Api.get(\"topcharts/all-top-charts\").then(function(response){if(response.response.status===200){dispatch({type:TOP_CHART_MUSIC,payload:response.responseData});}return response;});};};export var newReleaseMusic=function newReleaseMusic(){return function(dispatch,getState,Api){return Api.get(\"new-release/get-new-release\").then(function(response){if(response.response.status===200){dispatch({type:NEW_RELEASES,payload:response.responseData});}return response;});};};export var setMusicData=function setMusicData(payload,index){return function(dispatch){return dispatch({type:SONG_DATA,payload:{payload:payload,index:index}});};};export var retroClassicMusic=function retroClassicMusic(){return function(dispatch,getState,Api){return Api.get(\"retro-classic/get-retro-classic\").then(function(response){if(response.response.status===200){dispatch({type:RETRO_CLASSIC,payload:response.responseData});}return response;});};};export var radioMusic=function radioMusic(){return function(dispatch,getState,Api){return Api.get(\"radio/get-radio\").then(function(response){if(response.response.status===200){dispatch({type:RADIO_MUSIC,payload:response.responseData});}return response;});};};export var featureArtists=function featureArtists(){return function(dispatch,getState,Api){return Api.get(\"feature-artists/all-feature-artists\").then(function(response){if(response.response.status===200){dispatch({type:FEATURE_ARTISTS,payload:response.responseData});}return response;});};};export var artistsDetails=function artistsDetails(artistName){return function(dispatch,getState,Api){return Api.get(\"feature-artists/\".concat(artistName)).then(function(response){if(response.response.status===200){dispatch({type:ARTIST_DETAILS,payload:response.responseData});}return response;});};};export var getChartDetails=function getChartDetails(chartName){return function(dispatch,getState,Api){return Api.get(\"topcharts/\".concat(chartName)).then(function(response){if(response.response.status===200){dispatch({type:TOP_CHART,payload:response.responseData});}return response;});};};export var genres=function genres(){return function(dispatch,getState,Api){return Api.get(\"genres/all-genres\").then(function(response){if(response.response.status===200){dispatch({type:GENRES,payload:response.responseData});}return response;});};};export var genresMusic=function genresMusic(genresType){return function(dispatch,getState,Api){return Api.get(\"genres/\".concat(genresType)).then(function(response){if(response.response.status===200){dispatch({type:GENRES_MUSIC,payload:response.responseData});}return response;});};};export var retroClassic=function retroClassic(hitsArtist){return function(dispatch,getState,Api){return Api.get(\"retro-classic/\".concat(hitsArtist)).then(function(response){if(response.response.status===200){dispatch({type:RETRO_CLASSIC_MUSIC,payload:response.responseData});}return response;});};};export var AllSongs=function AllSongs(){return function(dispatch,getState,Api){return Api.get(\"genres/all-songs\").then(function(response){if(response.response.status===200){dispatch({type:ALL_SONGS,payload:response.responseData});}return response;});};};export var getSongsType=function getSongsType(songType){return function(dispatch,getState,Api){return Api.get(\"songs/\".concat(songType)).then(function(response){if(response.response.status===200){dispatch({type:SONG_TYPE_DATA,payload:response.responseData});}return response;});};};export var getSearchAll=function getSearchAll(searchText){return function(dispatch,getState,Api){return Api.get(\"songs/searchAll/\".concat(searchText)).then(function(response){if(response.response.status===200){dispatch({type:SEARCH_DATA,payload:response.responseData});}return response;});};};export var getActiveIndex=function getActiveIndex(index,queueList){return function(dispatch){if(index!==null){return dispatch({type:ACTIVE_INDEX,payload:index,queue:queueList});}else{return dispatch({type:ACTIVE_INDEX,queue:queueList});}};};export var clearQueue=function clearQueue(){return function(dispatch){return dispatch({type:CLEAR_QUEUE,payload:[]});};};export var deleteQueueSong=function deleteQueueSong(id){return function(dispatch){return dispatch({type:DELETE_QUEUE_SONG,payload:id});};};export var downloadSong=function downloadSong(id){return function(dispatch,getState,Api){// return Api.get(`songs/download/${id}`).then((response) => {\n//   if (response.response.status === 200) {\n//     dispatch({\n//       type: DOWNLOAD_SONG,\n//       payload: response.responseData,\n//     });\n//   }\n//   return response;\n// });\n};};export var uploadFileToServer=function uploadFileToServer(formData){return function(dispatch,getState,Api){console.log(\"upload\",formData);return Api.postForm(\"upload\",formData).then(function(response){return response;});};};export var getUserDetails=function getUserDetails(id){return function(dispatch,getState,Api){return Api.get(\"/user-details/\".concat(id)).then(function(response){if(response.response.status===200){dispatch({type:LOGIN_DATA,payload:response.responseData});}return response;});};};export var updateProfileDetails=function updateProfileDetails(id,payload){return function(dispatch,getState,Api){console.log(id,payload);return Api.put(\"\".concat(id),payload).then(function(response){console.log(response);return response;});};};","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Actions/HomePageApi.jsx"],"names":["TOP_CHART_MUSIC","NEW_RELEASES","SONG_DATA","RETRO_CLASSIC","RADIO_MUSIC","FEATURE_ARTISTS","ARTIST_DETAILS","TOP_CHART","GENRES","GENRES_MUSIC","RETRO_CLASSIC_MUSIC","ALL_SONGS","SONG_TYPE_DATA","SEARCH_DATA","ACTIVE_INDEX","DOWNLOAD_SONG","CLEAR_QUEUE","DELETE_QUEUE_SONG","LOGIN_DATA","fileDownload","download","topChartMusic","dispatch","getState","Api","get","then","response","status","type","payload","responseData","newReleaseMusic","setMusicData","index","retroClassicMusic","radioMusic","featureArtists","artistsDetails","artistName","getChartDetails","chartName","genres","genresMusic","genresType","retroClassic","hitsArtist","AllSongs","getSongsType","songType","getSearchAll","searchText","getActiveIndex","queueList","queue","clearQueue","deleteQueueSong","id","downloadSong","uploadFileToServer","formData","console","log","postForm","getUserDetails","updateProfileDetails","put"],"mappings":"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","sourcesContent":["import {\n  TOP_CHART_MUSIC,\n  NEW_RELEASES,\n  SONG_DATA,\n  RETRO_CLASSIC,\n  RADIO_MUSIC,\n  FEATURE_ARTISTS,\n  ARTIST_DETAILS,\n  TOP_CHART,\n  GENRES,\n  GENRES_MUSIC,\n  RETRO_CLASSIC_MUSIC,\n  ALL_SONGS,\n  SONG_TYPE_DATA,\n  SEARCH_DATA,\n  ACTIVE_INDEX,\n  DOWNLOAD_SONG,\n  CLEAR_QUEUE,\n  DELETE_QUEUE_SONG,\n  LOGIN_DATA,\n} from \"../ActionTypes/ActionTypes\";\n\nimport fileDownload from \"js-file-download\";\nimport download from \"downloadjs\";\n\nexport const topChartMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"topcharts/all-top-charts\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: TOP_CHART_MUSIC,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const newReleaseMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"new-release/get-new-release\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: NEW_RELEASES,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const setMusicData = (payload, index) => (dispatch) => {\n  return dispatch({\n    type: SONG_DATA,\n    payload: { payload, index },\n  });\n};\n\nexport const retroClassicMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"retro-classic/get-retro-classic\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: RETRO_CLASSIC,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const radioMusic = () => (dispatch, getState, Api) => {\n  return Api.get(\"radio/get-radio\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: RADIO_MUSIC,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const featureArtists = () => (dispatch, getState, Api) => {\n  return Api.get(\"feature-artists/all-feature-artists\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: FEATURE_ARTISTS,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const artistsDetails = (artistName) => (dispatch, getState, Api) => {\n  return Api.get(`feature-artists/${artistName}`).then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: ARTIST_DETAILS,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const getChartDetails = (chartName) => (dispatch, getState, Api) => {\n  return Api.get(`topcharts/${chartName}`).then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: TOP_CHART,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const genres = () => (dispatch, getState, Api) => {\n  return Api.get(\"genres/all-genres\").then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: GENRES,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const genresMusic = (genresType) => (dispatch, getState, Api) => {\n  return Api.get(`genres/${genresType}`).then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: GENRES_MUSIC,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const retroClassic = (hitsArtist) => (dispatch, getState, Api) => {\n  return Api.get(`retro-classic/${hitsArtist}`).then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: RETRO_CLASSIC_MUSIC,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const AllSongs = () => (dispatch, getState, Api) => {\n  return Api.get(`genres/all-songs`).then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: ALL_SONGS,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const getSongsType = (songType) => (dispatch, getState, Api) => {\n  return Api.get(`songs/${songType}`).then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: SONG_TYPE_DATA,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const getSearchAll = (searchText) => (dispatch, getState, Api) => {\n  return Api.get(`songs/searchAll/${searchText}`).then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: SEARCH_DATA,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const getActiveIndex = (index, queueList) => (dispatch) => {\n  if (index !== null) {\n    return dispatch({\n      type: ACTIVE_INDEX,\n      payload: index,\n      queue: queueList,\n    });\n  } else {\n    return dispatch({\n      type: ACTIVE_INDEX,\n      queue: queueList,\n    });\n  }\n};\n\nexport const clearQueue = () => (dispatch) => {\n  return dispatch({\n    type: CLEAR_QUEUE,\n    payload: [],\n  });\n};\n\nexport const deleteQueueSong = (id) => (dispatch) => {\n  return dispatch({\n    type: DELETE_QUEUE_SONG,\n    payload: id,\n  });\n};\n\nexport const downloadSong = (id) => (dispatch, getState, Api) => {\n  // return Api.get(`songs/download/${id}`).then((response) => {\n  //   if (response.response.status === 200) {\n  //     dispatch({\n  //       type: DOWNLOAD_SONG,\n  //       payload: response.responseData,\n  //     });\n  //   }\n  //   return response;\n  // });\n};\n\nexport const uploadFileToServer = (formData) => (dispatch, getState, Api) => {\n  console.log(\"upload\", formData);\n  return Api.postForm(\"upload\", formData).then((response) => {\n    return response;\n  });\n};\n\nexport const getUserDetails = (id) => (dispatch, getState, Api) => {\n  return Api.get(`/user-details/${id}`).then((response) => {\n    if (response.response.status === 200) {\n      dispatch({\n        type: LOGIN_DATA,\n        payload: response.responseData,\n      });\n    }\n    return response;\n  });\n};\n\nexport const updateProfileDetails = (id, payload) => (\n  dispatch,\n  getState,\n  Api\n) => {\n  console.log(id, payload);\n\n  return Api.put(`${id}`, payload).then((response) => {\n    console.log(response);\n    return response;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}