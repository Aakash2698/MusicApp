{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/ContentComponents/Music/Music.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Music.scss\";\nimport { connect } from \"react-redux\";\nimport { AllSongs, setMusicData, showLoader } from \"../../../Actions\";\n\nclass Music extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.AllSongs = () => {\n      this.props.AllSongs();\n    };\n\n    this.getData = (songData, index) => {\n      this.props.setMusicData(songData, index);\n    };\n  }\n\n  componentDidMount() {\n    this.props.showLoader();\n    this.AllSongs();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"genres-heading\",\n        children: \"Free Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"col-6 font-weight-bold\",\n          children: this.props.songsData.length + \" Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-list \",\n          children: this.props.songsData && this.props.songsData.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-list--item \",\n              onClick: e => this.getData(this.props.songsData, index),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-dark custom-card--inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-card--inline-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: data.songImage,\n                    alt: \"song-image\",\n                    className: \"card-img--radius-sm\",\n                    height: \"40px\",\n                    width: \"40px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-card--inline-desc\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-truncate mb-0 song-color pd-11 web-bold\",\n                    children: data.songName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-truncate text-muted font-sm\",\n                    children: data.artistName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-card--labels d-flex ml-auto web-bold\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"#adb5bd\"\n                  },\n                  children: [\" \", data.duration]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst MapStateToProps = state => ({\n  songsData: state.home.allSongs\n});\n\n_c = MapStateToProps;\nexport default connect(MapStateToProps, {\n  AllSongs,\n  setMusicData,\n  showLoader\n})(Music);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapStateToProps\");","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/ContentComponents/Music/Music.jsx"],"names":["React","Component","connect","AllSongs","setMusicData","showLoader","Music","props","getData","songData","index","componentDidMount","render","songsData","length","map","data","e","songImage","songName","artistName","color","duration","MapStateToProps","state","home","allSongs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Music.scss\";\nimport { connect } from \"react-redux\";\nimport { AllSongs, setMusicData, showLoader } from \"../../../Actions\";\nclass Music extends Component {\n  componentDidMount() {\n    this.props.showLoader();\n    this.AllSongs();\n  }\n  AllSongs = () => {\n    this.props.AllSongs();\n  };\n  getData = (songData, index) => {\n    this.props.setMusicData(songData, index);\n  };\n  render() {\n    return (\n      <div>\n        <h1 className=\"genres-heading\">Free Music</h1>\n        <div className=\"row align-items-end\">\n          <span className=\"col-6 font-weight-bold\">\n            {this.props.songsData.length + \" Results\"}\n          </span>\n          <div className=\"col-12\">\n            <hr />\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"custom-list \">\n            {this.props.songsData &&\n              this.props.songsData.map((data, index) => {\n                return (\n                  <div\n                    className=\"custom-list--item \"\n                    onClick={(e) => this.getData(this.props.songsData, index)}\n                  >\n                    <div className=\"text-dark custom-card--inline\">\n                      <div className=\"custom-card--inline-img\">\n                        <img\n                          src={data.songImage}\n                          alt=\"song-image\"\n                          className=\"card-img--radius-sm\"\n                          height=\"40px\"\n                          width=\"40px\"\n                        />\n                      </div>\n                      <div className=\"custom-card--inline-desc\">\n                        <p className=\"text-truncate mb-0 song-color pd-11 web-bold\">\n                          {data.songName}\n                        </p>\n                        <p className=\"text-truncate text-muted font-sm\">\n                          {data.artistName}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"custom-card--labels d-flex ml-auto web-bold\">\n                      <p style={{ color: \"#adb5bd\" }}> {data.duration}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst MapStateToProps = (state) => ({\n  songsData: state.home.allSongs,\n});\n\nexport default connect(MapStateToProps, {\n  AllSongs,\n  setMusicData,\n  showLoader,\n})(Music);\n"]},"metadata":{},"sourceType":"module"}