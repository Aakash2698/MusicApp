{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Components/ContentComponents/ArtistDetails/ArtistDetails.jsx\";\nimport Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport artistImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport \"./ArtistDetails.scss\";\nimport { artistsDetails, setMusicData, getChartDetails, genresMusic, genres } from \"../../../Actions\";\nimport { connect } from \"react-redux\";\n\nclass ArtistDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabValue: \"topSongs\",\n      activeMusic: false\n    };\n\n    this.artistDetails = () => {\n      this.props.artistsDetails(this.props.match.params.musics);\n    };\n\n    this.getChartDetails = () => {\n      this.props.getChartDetails(this.props.match.params.musics);\n    };\n\n    this.genresMusic = () => {\n      this.props.genresMusic(this.props.match.params.musics);\n    };\n\n    this.getData = (songName, songImage, artistName, songUrl) => {\n      const songData = [{\n        songName: songImage,\n        songImage: songName,\n        artist: artistName,\n        songUrl: songUrl\n      }];\n      this.props.setMusicData(songData);\n    };\n\n    this.handleTabChange = tabName => {\n      this.setState({\n        tabValue: tabName\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.artistDetails();\n    this.getChartDetails();\n    this.genresMusic();\n  }\n\n  render() {\n    const artistData = this.props.artistDetails.artists;\n    const songsData = this.props.artistDetails.songs;\n    const topChartsArtist = this.props.topCharts.artists;\n    const topChartsSongs = this.props.topCharts.songs;\n    const genresArtist = this.props.genres.artists;\n    const genresSongs = this.props.genres.songs;\n    const {\n      activeMusic\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [artistData && topChartsArtist.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row section text-centre text-md-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-3 col-lg-4 col-sm-5 song-header-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: data.artistImage || data.chartImage || data.genresImage,\n                alt: \"artist-image\",\n                className: \"card-img--radius-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-9 col-lg-8 col-sm-7\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row pt-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-8 col-lg-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"artist-name\",\n                    children: data.artistName ? data.artistName : data.chartName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-pill btn-air btn-bold btn-danger play-all\",\n                      children: \"Play all\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"s_l s_h desktopflex\",\n              style: {\n                margin: \"0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_cnt\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_title\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_artist\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: \"Artists\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_duration\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"far fa-clock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyle: \"none\",\n                padding: \"0\"\n              },\n              children: songsData && (topChartsSongs || songsData || genresSongs).map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: activeMusic ? \"active-music\" : \"songs-row\",\n                  onClick: e => this.getData(data.songImage, data.songName, data.artistName, data.songUrl),\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"a_l artworkload _cursor\",\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_cnt p_cnt desktop\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"_c sng_c\",\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_title p_title list loaded\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"playlist-data\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"playlist_thumb\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: data.songImage,\n                            alt: \"song_image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 141,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 140,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"playlist_thumb_det\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"songs\",\n                            children: data.songName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 144,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_artist p_artist desktop\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"sng_c\",\n                          children: data.artistName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 150,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_duration\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"desktop sng_c\",\n                        children: data.duration\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst MapStateToProps = state => ({\n  artistDetails: state.home.artistDetails,\n  topCharts: state.home.topCharts,\n  genres: state.home.genresMusic\n});\n\n_c = MapStateToProps;\nexport default connect(MapStateToProps, {\n  artistsDetails,\n  setMusicData,\n  getChartDetails,\n  genresMusic\n})(ArtistDetails);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapStateToProps\");","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Components/ContentComponents/ArtistDetails/ArtistDetails.jsx"],"names":["Axios","React","Component","artistImage","artistsDetails","setMusicData","getChartDetails","genresMusic","genres","connect","ArtistDetails","state","tabValue","activeMusic","artistDetails","props","match","params","musics","getData","songName","songImage","artistName","songUrl","songData","artist","handleTabChange","tabName","setState","componentDidMount","render","artistData","artists","songsData","songs","topChartsArtist","topCharts","topChartsSongs","genresArtist","genresSongs","map","data","index","chartImage","genresImage","chartName","margin","listStyle","padding","e","duration","MapStateToProps","home"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport artistImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport \"./ArtistDetails.scss\";\nimport {\n  artistsDetails,\n  setMusicData,\n  getChartDetails,\n  genresMusic,\n  genres,\n} from \"../../../Actions\";\nimport { connect } from \"react-redux\";\nclass ArtistDetails extends Component {\n  state = {\n    tabValue: \"topSongs\",\n    activeMusic: false,\n  };\n  componentDidMount() {\n    this.artistDetails();\n    this.getChartDetails();\n    this.genresMusic();\n  }\n\n  artistDetails = () => {\n    this.props.artistsDetails(this.props.match.params.musics);\n  };\n\n  getChartDetails = () => {\n    this.props.getChartDetails(this.props.match.params.musics);\n  };\n\n  genresMusic = () => {\n    this.props.genresMusic(this.props.match.params.musics);\n  };\n\n  getData = (songName, songImage, artistName, songUrl) => {\n    const songData = [\n      {\n        songName: songImage,\n        songImage: songName,\n        artist: artistName,\n        songUrl: songUrl,\n      },\n    ];\n    this.props.setMusicData(songData);\n  };\n  handleTabChange = (tabName) => {\n    this.setState({\n      tabValue: tabName,\n    });\n  };\n\n  render() {\n    const artistData = this.props.artistDetails.artists;\n    const songsData = this.props.artistDetails.songs;\n\n    const topChartsArtist = this.props.topCharts.artists;\n    const topChartsSongs = this.props.topCharts.songs;\n\n    const genresArtist = this.props.genres.artists;\n    const genresSongs = this.props.genres.songs;\n\n    const { activeMusic } = this.state;\n\n    return (\n      <div>\n        <div>\n          {artistData &&\n            topChartsArtist.map((data, index) => {\n              return (\n                <div className=\"row section text-centre text-md-left\">\n                  <div className=\"col-xl-3 col-lg-4 col-sm-5 song-header-image\">\n                    <img\n                      src={\n                        data.artistImage || data.chartImage || data.genresImage\n                      }\n                      alt=\"artist-image\"\n                      className=\"card-img--radius-lg\"\n                    />\n                  </div>\n                  <div className=\"col-xl-9 col-lg-8 col-sm-7\">\n                    <div className=\"row pt-4\">\n                      <div className=\"col-xl-8 col-lg-6\">\n                        <h5 className=\"artist-name\">\n                          {data.artistName ? data.artistName : data.chartName}\n                        </h5>\n                        <div className=\"mt-4\">\n                          <button className=\"btn btn-pill btn-air btn-bold btn-danger play-all\">\n                            Play all\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n\n          <div className=\"section\">\n            <div className=\"custom-list\">\n              <ul className=\"s_l s_h desktopflex\" style={{ margin: \"0\" }}>\n                <li className=\"s_cnt\">\n                  <span className=\"row-head\">#</span>\n                </li>\n                <li className=\"s_title\">\n                  <span className=\"row-head\">Title</span>\n                </li>\n                <li className=\"s_artist\">\n                  <span className=\"row-head\">Artists</span>\n                </li>\n                <li className=\"s_duration\">\n                  <span className=\"row-head\">\n                    <i class=\"far fa-clock\"></i>\n                  </span>\n                </li>\n              </ul>\n              <ul style={{ listStyle: \"none\", padding: \"0\" }}>\n                {songsData &&\n                  (topChartsSongs || songsData || genresSongs).map(\n                    (data, index) => {\n                      return (\n                        <li\n                          key={index}\n                          className={activeMusic ? \"active-music\" : \"songs-row\"}\n                          onClick={(e) =>\n                            this.getData(\n                              data.songImage,\n                              data.songName,\n                              data.artistName,\n                              data.songUrl\n                            )\n                          }\n                        >\n                          <ul className=\"a_l artworkload _cursor\">\n                            <li className=\"s_cnt p_cnt desktop\">\n                              <span className=\"_c sng_c\">{index + 1}</span>\n                            </li>\n                            <li className=\"s_title p_title list loaded\">\n                              <div className=\"playlist-data\">\n                                <div className=\"playlist_thumb\">\n                                  <img src={data.songImage} alt=\"song_image\" />\n                                </div>\n                                <div className=\"playlist_thumb_det\">\n                                  <span className=\"songs\">{data.songName}</span>\n                                </div>\n                              </div>\n                            </li>\n                            <li className=\"s_artist p_artist desktop\">\n                              <div>\n                                <span className=\"sng_c\">{data.artistName}</span>\n                              </div>\n                            </li>\n                            <li className=\"s_duration\">\n                              <span className=\"desktop sng_c\">\n                                {data.duration}\n                              </span>\n                            </li>\n                          </ul>\n                        </li>\n                      );\n                    }\n                  )}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst MapStateToProps = (state) => ({\n  artistDetails: state.home.artistDetails,\n  topCharts: state.home.topCharts,\n  genres: state.home.genresMusic,\n});\n\nexport default connect(MapStateToProps, {\n  artistsDetails,\n  setMusicData,\n  getChartDetails,\n  genresMusic,\n})(ArtistDetails);\n"]},"metadata":{},"sourceType":"module"}