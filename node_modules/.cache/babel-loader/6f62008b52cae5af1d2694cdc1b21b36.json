{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Components/ContentComponents/Music/Music.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Music.scss\";\nimport { connect } from \"react-redux\";\nimport { AllSongs, setMusicData } from \"../../../Actions\";\n\nclass Music extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.AllSongs = () => {\n      this.props.AllSongs();\n    };\n\n    this.getSongData = (songName, artist, songImage, songUrl) => {\n      const songData = [{\n        songName: songName,\n        artist: artist,\n        songImage: songImage,\n        songUrl: songUrl\n      }];\n      this.props.setMusicData(songData);\n    };\n  }\n\n  componentDidMount() {\n    this.AllSongs();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"genres-heading\",\n        children: \"Free Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row align-items-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"col-6 font-weight-bold\",\n          children: this.props.songsData.length + \" Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-list \",\n          children: this.props.songsData && this.props.songsData.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-list--item \",\n              onClick: e => this.getSongData(data.songName, data.artist, data.songImage, data.songUrl),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-dark custom-card--inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-card--inline-img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: data.songImage,\n                    alt: \"song-image\",\n                    className: \"card-img--radius-sm\",\n                    height: \"40px\",\n                    width: \"40px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom-card--inline-desc\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-truncate mb-0 song-color pd-11 web-bold\",\n                    children: data.songName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-truncate text-muted font-sm\",\n                    children: data.artistName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-card--labels d-flex ml-auto web-bold\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"#adb5bd\"\n                  },\n                  children: [\" \", data.duration]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst MapStateToProps = state => ({\n  songsData: state.home.allSongs\n});\n\n_c = MapStateToProps;\nexport default connect(MapStateToProps, {\n  AllSongs,\n  setMusicData\n})(Music);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapStateToProps\");","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Components/ContentComponents/Music/Music.jsx"],"names":["React","Component","connect","AllSongs","setMusicData","Music","props","getSongData","songName","artist","songImage","songUrl","songData","componentDidMount","render","songsData","length","map","data","index","e","artistName","color","duration","MapStateToProps","state","home","allSongs"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,kBAAvC;;AACA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAI5BE,QAJ4B,GAIjB,MAAM;AACf,WAAKG,KAAL,CAAWH,QAAX;AACD,KAN2B;;AAAA,SAO5BI,WAP4B,GAOd,CAACC,QAAD,EAAWC,MAAX,EAAmBC,SAAnB,EAA8BC,OAA9B,KAA0C;AACtD,YAAMC,QAAQ,GAAG,CACf;AACEJ,QAAAA,QAAQ,EAAEA,QADZ;AAEEC,QAAAA,MAAM,EAAEA,MAFV;AAGEC,QAAAA,SAAS,EAAEA,SAHb;AAIEC,QAAAA,OAAO,EAAEA;AAJX,OADe,CAAjB;AAQA,WAAKL,KAAL,CAAWF,YAAX,CAAwBQ,QAAxB;AACD,KAjB2B;AAAA;;AAC5BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,QAAL;AACD;;AAeDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAA,oBACG,KAAKR,KAAL,CAAWS,SAAX,CAAqBC,MAArB,GAA8B;AADjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACG,KAAKV,KAAL,CAAWS,SAAX,IACC,KAAKT,KAAL,CAAWS,SAAX,CAAqBE,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxC,gCACE;AACE,cAAA,SAAS,EAAC,oBADZ;AAEE,cAAA,OAAO,EAAGC,CAAD,IACP,KAAKb,WAAL,CACEW,IAAI,CAACV,QADP,EAEEU,IAAI,CAACT,MAFP,EAGES,IAAI,CAACR,SAHP,EAIEQ,IAAI,CAACP,OAJP,CAHJ;AAAA,sCAWE;AAAK,gBAAA,SAAS,EAAC,+BAAf;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,yBAAf;AAAA,yCACE;AACE,oBAAA,GAAG,EAAEO,IAAI,CAACR,SADZ;AAEE,oBAAA,GAAG,EAAC,YAFN;AAGE,oBAAA,SAAS,EAAC,qBAHZ;AAIE,oBAAA,MAAM,EAAC,MAJT;AAKE,oBAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAUE;AAAK,kBAAA,SAAS,EAAC,0BAAf;AAAA,0CACE;AAAG,oBAAA,SAAS,EAAC,8CAAb;AAAA,8BACGQ,IAAI,CAACV;AADR;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAG,oBAAA,SAAS,EAAC,kCAAb;AAAA,8BACGU,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eA8BE;AAAK,gBAAA,SAAS,EAAC,6CAAf;AAAA,uCACE;AAAG,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,KAAK,EAAE;AAAT,mBAAV;AAAA,kCAAkCJ,IAAI,CAACK,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAoCD,WArCD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwDD;;AA3E2B;;AA6E9B,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,SAAS,EAAEU,KAAK,CAACC,IAAN,CAAWC;AADY,CAAZ,CAAxB;;KAAMH,e;AAIN,eAAetB,OAAO,CAACsB,eAAD,EAAkB;AACtCrB,EAAAA,QADsC;AAEtCC,EAAAA;AAFsC,CAAlB,CAAP,CAGZC,KAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Music.scss\";\nimport { connect } from \"react-redux\";\nimport { AllSongs, setMusicData } from \"../../../Actions\";\nclass Music extends Component {\n  componentDidMount() {\n    this.AllSongs();\n  }\n  AllSongs = () => {\n    this.props.AllSongs();\n  };\n  getSongData = (songName, artist, songImage, songUrl) => {\n    const songData = [\n      {\n        songName: songName,\n        artist: artist,\n        songImage: songImage,\n        songUrl: songUrl,\n      },\n    ];\n    this.props.setMusicData(songData);\n  };\n  render() {\n    return (\n      <div>\n        <h1 className=\"genres-heading\">Free Music</h1>\n        <div className=\"row align-items-end\">\n          <span className=\"col-6 font-weight-bold\">\n            {this.props.songsData.length + \" Results\"}\n          </span>\n          <div className=\"col-12\">\n            <hr />\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"custom-list \">\n            {this.props.songsData &&\n              this.props.songsData.map((data, index) => {\n                return (\n                  <div\n                    className=\"custom-list--item \"\n                    onClick={(e) =>\n                      this.getSongData(\n                        data.songName,\n                        data.artist,\n                        data.songImage,\n                        data.songUrl\n                      )\n                    }\n                  >\n                    <div className=\"text-dark custom-card--inline\">\n                      <div className=\"custom-card--inline-img\">\n                        <img\n                          src={data.songImage}\n                          alt=\"song-image\"\n                          className=\"card-img--radius-sm\"\n                          height=\"40px\"\n                          width=\"40px\"\n                        />\n                      </div>\n                      <div className=\"custom-card--inline-desc\">\n                        <p className=\"text-truncate mb-0 song-color pd-11 web-bold\">\n                          {data.songName}\n                        </p>\n                        <p className=\"text-truncate text-muted font-sm\">\n                          {data.artistName}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"custom-card--labels d-flex ml-auto web-bold\">\n                      <p style={{ color: \"#adb5bd\" }}> {data.duration}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst MapStateToProps = (state) => ({\n  songsData: state.home.allSongs,\n});\n\nexport default connect(MapStateToProps, {\n  AllSongs,\n  setMusicData,\n})(Music);\n"]},"metadata":{},"sourceType":"module"}