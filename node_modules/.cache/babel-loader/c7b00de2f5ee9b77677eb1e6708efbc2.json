{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/ContentComponents/ArtistDetails/ArtistDetails.jsx\";\nimport Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport artistImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport \"./ArtistDetails.scss\";\nimport { artistsDetails, setMusicData, getChartDetails, genresMusic, genres, retroClassic, hideLoader, downloadSong } from \"../../../Actions\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { saveAs } from \"file-saver\";\nimport download from \"downloadjs\";\nimport { exact } from \"prop-types\";\nimport axios from \"axios\";\nimport fileDownload from \"js-file-download\";\n\nclass ArtistDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabValue: \"topSongs\",\n      activeMusic: false,\n      playIndex: null,\n      downloadUrl: \"\"\n    };\n\n    this.artistDetails = () => {\n      this.props.artistsDetails(this.props.match.params.musics);\n    };\n\n    this.getChartDetails = () => {\n      this.props.getChartDetails(this.props.match.params.musics);\n    };\n\n    this.genresMusic = () => {\n      this.props.genresMusic(this.props.match.params.musics);\n    };\n\n    this.retroClassic = () => {\n      this.props.retroClassic(this.props.match.params.musics);\n    };\n\n    this.getData = (songData, index) => {\n      {\n        this.props.setMusicData(songData, index);\n      }\n    };\n\n    this.handleTabChange = tabName => {\n      this.setState({\n        tabValue: tabName\n      });\n    };\n\n    this.playAll = allSongData => {\n      this.props.setMusicData(allSongData);\n    };\n\n    this.downloadSong = (id, filename) => {\n      // console.log(filename);\n      // console.log(this.state.downloadUrl);\n      const url = \"http://localhost:4000/songs/download/5fe083ec1bdda72091015d27\";\n      axios.get(this.state.downloadUrl, {\n        responseType: \"blob\"\n      }).then(res => {\n        fileDownload(res.data, filename);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.type === \"chartsData\") {\n      this.getChartDetails();\n    }\n\n    if (this.props.match.params.type === \"artistData\") {\n      this.artistDetails();\n    }\n\n    if (this.props.match.params.type === \"genresData\") {\n      this.genresMusic();\n    }\n\n    if (this.props.match.params.type === \"hitsArtistData\") {\n      this.retroClassic();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n\n    if (nextProps.activeSongIndex) {\n      this.setState({\n        playIndex: nextProps.activeSongIndex\n      });\n    }\n\n    if (nextProps.downloadUrl) {\n      this.setState({\n        downloadUrl: nextProps.downloadUrl\n      });\n    }\n  } // downloadSong = async (id, songName) => {\n  //   const res = await fetch(`\"http://localhost:4000/songs/download/${id}\"`);\n  //   const blob = await res.blob();\n  //   console.log(blob);\n  //   download(blob, songName + \".mp3\", \"audio/mpeg\");\n  // };\n  // downloadSong = (id, songName) => {\n  //   console.log(id);\n  //   this.props.downloadSong(id).then(() => {\n  //     const link = document.createElement(\"a\");\n  //     link.href = `\"http://localhost:4000/songs/download/${id}\"`;\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //     // var element = document.createElement(\"a\");\n  //     // var file = new Blob([`\"http://localhost:4000/songs/download/${id}\"`], {\n  //     //   type: \"audio/mpeg\",\n  //     // });\n  //     // element.href = URL.createObjectURL(file);\n  //     // element.download = songName + \".mp3\";\n  //     // element.click();\n  //   });\n  // };\n\n\n  render() {\n    console.log(this.props.downloadUrl);\n    let artistData, songsData;\n\n    if (this.props.currentState === \"topCharts\") {\n      artistData = this.props.topCharts.artists;\n      songsData = this.props.topCharts.songs;\n    } else if (this.props.currentState === \"artistSongs\") {\n      artistData = this.props.artistDetails.artists;\n      songsData = this.props.artistDetails.songs;\n    } else if (this.props.currentState === \"genresMusic\") {\n      artistData = this.props.genres.artists;\n      songsData = this.props.genres.songs;\n    } else if (this.props.currentState === \"retroClassic\") {\n      artistData = this.props.retroClassics.artists;\n      songsData = this.props.retroClassics.songs;\n    }\n\n    const {\n      activeMusic\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [artistData && artistData.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row section text-centre text-md-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-3 col-lg-4 col-sm-5 song-header-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: data.artistImage || data.chartImage || data.genresImage || data.hitsArtistImage,\n                alt: \"artist-image\",\n                className: \"card-img--radius-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-9 col-lg-8 col-sm-7\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row pt-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-8 col-lg-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"artist-name\",\n                    children: data.artistName || data.chartName || data.genresName || \"Hits Of \" + data.hitsArtistName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-pill btn-air btn-bold btn-danger play-all\",\n                      onClick: () => this.playAll(songsData),\n                      children: \"Play all\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"s_l s_h desktopflex\",\n              style: {\n                margin: \"0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_cnt\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_title\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_artist\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: \"Artists\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_duration\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: \"Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"s_download-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"row-head\",\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyle: \"none\",\n                padding: \"0\"\n              },\n              children: songsData && songsData.map((data, index) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: this.state.playIndex === 0 || this.state.playIndex === index ? \"active-music\" : \"songs-row\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"a_l artworkload _cursor\",\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_cnt p_cnt desktop\",\n                      onClick: e => this.getData(songsData, index),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"_c sng_c\",\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_title p_title list loaded\",\n                      onClick: e => this.getData(songsData, index),\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"playlist-data\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"playlist_thumb\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: data.songImage,\n                            alt: \"song_image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 239,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"playlist_thumb_det\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"songs\",\n                            children: data.songName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 242,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 241,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_artist p_artist desktop\",\n                      onClick: e => this.getData(songsData, index),\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"sng_c\",\n                          children: data.artistName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 251,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_duration\",\n                      onClick: e => this.getData(songsData, index),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"desktop sng_c\",\n                        style: {\n                          width: \"50%\",\n                          textAlign: \"center\"\n                        },\n                        children: data.duration\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"s_download-icon\",\n                      onClick: () => this.downloadSong(data._id, data.songName + \".mp3\"),\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sng_c\",\n                        style: {\n                          width: \"90%\",\n                          textAlign: \"center\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fas fa-download\",\n                          style: {\n                            fontSize: \"1.3rem\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst MapStateToProps = state => ({\n  artistDetails: state.home.artistDetails,\n  topCharts: state.home.topCharts,\n  genres: state.home.genresMusic,\n  currentState: state.home.currentData,\n  retroClassics: state.home.retroClassicMusic,\n  activeSongIndex: state.home.activeIndex,\n  downloadUrl: state.home.downloadFile\n});\n\n_c = MapStateToProps;\nexport default connect(MapStateToProps, {\n  artistsDetails,\n  setMusicData,\n  getChartDetails,\n  genresMusic,\n  retroClassic,\n  hideLoader,\n  downloadSong\n})(ArtistDetails);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapStateToProps\");","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/ContentComponents/ArtistDetails/ArtistDetails.jsx"],"names":["Axios","React","Component","artistImage","artistsDetails","setMusicData","getChartDetails","genresMusic","genres","retroClassic","hideLoader","downloadSong","connect","NavLink","Link","saveAs","download","exact","axios","fileDownload","ArtistDetails","state","tabValue","activeMusic","playIndex","downloadUrl","artistDetails","props","match","params","musics","getData","songData","index","handleTabChange","tabName","setState","playAll","allSongData","id","filename","url","get","responseType","then","res","data","componentDidMount","type","componentWillReceiveProps","nextProps","console","log","activeSongIndex","render","artistData","songsData","currentState","topCharts","artists","songs","retroClassics","map","chartImage","genresImage","hitsArtistImage","artistName","chartName","genresName","hitsArtistName","margin","listStyle","padding","e","songImage","songName","width","textAlign","duration","_id","fontSize","MapStateToProps","home","currentData","retroClassicMusic","activeIndex","downloadFile"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport artistImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport \"./ArtistDetails.scss\";\nimport {\n  artistsDetails,\n  setMusicData,\n  getChartDetails,\n  genresMusic,\n  genres,\n  retroClassic,\n  hideLoader,\n  downloadSong,\n} from \"../../../Actions\";\nimport { connect } from \"react-redux\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { saveAs } from \"file-saver\";\nimport download from \"downloadjs\";\nimport { exact } from \"prop-types\";\nimport axios from \"axios\";\nimport fileDownload from \"js-file-download\";\nclass ArtistDetails extends Component {\n  state = {\n    tabValue: \"topSongs\",\n    activeMusic: false,\n    playIndex: null,\n    downloadUrl: \"\",\n  };\n  componentDidMount() {\n    if (this.props.match.params.type === \"chartsData\") {\n      this.getChartDetails();\n    }\n    if (this.props.match.params.type === \"artistData\") {\n      this.artistDetails();\n    }\n    if (this.props.match.params.type === \"genresData\") {\n      this.genresMusic();\n    }\n    if (this.props.match.params.type === \"hitsArtistData\") {\n      this.retroClassic();\n    }\n  }\n\n  artistDetails = () => {\n    this.props.artistsDetails(this.props.match.params.musics);\n  };\n\n  getChartDetails = () => {\n    this.props.getChartDetails(this.props.match.params.musics);\n  };\n\n  genresMusic = () => {\n    this.props.genresMusic(this.props.match.params.musics);\n  };\n\n  retroClassic = () => {\n    this.props.retroClassic(this.props.match.params.musics);\n  };\n\n  getData = (songData, index) => {\n    {\n      this.props.setMusicData(songData, index);\n    }\n  };\n  handleTabChange = (tabName) => {\n    this.setState({\n      tabValue: tabName,\n    });\n  };\n  playAll = (allSongData) => {\n    this.props.setMusicData(allSongData);\n  };\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    if (nextProps.activeSongIndex) {\n      this.setState({\n        playIndex: nextProps.activeSongIndex,\n      });\n    }\n    if (nextProps.downloadUrl) {\n      this.setState({\n        downloadUrl: nextProps.downloadUrl,\n      });\n    }\n  }\n\n  // downloadSong = async (id, songName) => {\n  //   const res = await fetch(`\"http://localhost:4000/songs/download/${id}\"`);\n  //   const blob = await res.blob();\n  //   console.log(blob);\n  //   download(blob, songName + \".mp3\", \"audio/mpeg\");\n  // };\n\n  // downloadSong = (id, songName) => {\n  //   console.log(id);\n  //   this.props.downloadSong(id).then(() => {\n  //     const link = document.createElement(\"a\");\n  //     link.href = `\"http://localhost:4000/songs/download/${id}\"`;\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n\n  //     // var element = document.createElement(\"a\");\n  //     // var file = new Blob([`\"http://localhost:4000/songs/download/${id}\"`], {\n  //     //   type: \"audio/mpeg\",\n  //     // });\n  //     // element.href = URL.createObjectURL(file);\n  //     // element.download = songName + \".mp3\";\n  //     // element.click();\n  //   });\n  // };\n  downloadSong = (id, filename) => {\n    // console.log(filename);\n    // console.log(this.state.downloadUrl);\n    const url = \"http://localhost:4000/songs/download/5fe083ec1bdda72091015d27\";\n    axios\n      .get(this.state.downloadUrl, {\n        responseType: \"blob\",\n      })\n      .then((res) => {\n        fileDownload(res.data, filename);\n      });\n  };\n\n  render() {\n    console.log(this.props.downloadUrl);\n    let artistData, songsData;\n    if (this.props.currentState === \"topCharts\") {\n      artistData = this.props.topCharts.artists;\n      songsData = this.props.topCharts.songs;\n    } else if (this.props.currentState === \"artistSongs\") {\n      artistData = this.props.artistDetails.artists;\n      songsData = this.props.artistDetails.songs;\n    } else if (this.props.currentState === \"genresMusic\") {\n      artistData = this.props.genres.artists;\n      songsData = this.props.genres.songs;\n    } else if (this.props.currentState === \"retroClassic\") {\n      artistData = this.props.retroClassics.artists;\n      songsData = this.props.retroClassics.songs;\n    }\n\n    const { activeMusic } = this.state;\n\n    return (\n      <div>\n        <div>\n          {artistData &&\n            artistData.map((data, index) => {\n              return (\n                <div className=\"row section text-centre text-md-left\">\n                  <div className=\"col-xl-3 col-lg-4 col-sm-5 song-header-image\">\n                    <img\n                      src={\n                        data.artistImage ||\n                        data.chartImage ||\n                        data.genresImage ||\n                        data.hitsArtistImage\n                      }\n                      alt=\"artist-image\"\n                      className=\"card-img--radius-lg\"\n                    />\n                  </div>\n                  <div className=\"col-xl-9 col-lg-8 col-sm-7\">\n                    <div className=\"row pt-4\">\n                      <div className=\"col-xl-8 col-lg-6\">\n                        <h5 className=\"artist-name\">\n                          {data.artistName ||\n                            data.chartName ||\n                            data.genresName ||\n                            \"Hits Of \" + data.hitsArtistName}\n                        </h5>\n                        <div className=\"mt-4\">\n                          <button\n                            className=\"btn btn-pill btn-air btn-bold btn-danger play-all\"\n                            onClick={() => this.playAll(songsData)}\n                          >\n                            Play all\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n\n          <div className=\"section\">\n            <div className=\"custom-list\">\n              <ul className=\"s_l s_h desktopflex\" style={{ margin: \"0\" }}>\n                <li className=\"s_cnt\">\n                  <span className=\"row-head\">#</span>\n                </li>\n                <li className=\"s_title\">\n                  <span className=\"row-head\">Title</span>\n                </li>\n                <li className=\"s_artist\">\n                  <span className=\"row-head\">Artists</span>\n                </li>\n                <li className=\"s_duration\">\n                  <span className=\"row-head\">\n                    Duration\n                    {/* <i class=\"far fa-clock\"></i> */}\n                  </span>\n                </li>\n                <li className=\"s_download-icon\">\n                  <span className=\"row-head\">\n                    Download\n                    {/* <i class=\"fas fa-download\"></i> */}\n                  </span>\n                </li>\n              </ul>\n              <ul style={{ listStyle: \"none\", padding: \"0\" }}>\n                {songsData &&\n                  songsData.map((data, index) => {\n                    return (\n                      <li\n                        key={index}\n                        className={\n                          this.state.playIndex === 0 ||\n                          this.state.playIndex === index\n                            ? \"active-music\"\n                            : \"songs-row\"\n                        }\n                      >\n                        <ul className=\"a_l artworkload _cursor\">\n                          <li\n                            className=\"s_cnt p_cnt desktop\"\n                            onClick={(e) => this.getData(songsData, index)}\n                          >\n                            <span className=\"_c sng_c\">{index + 1}</span>\n                          </li>\n                          <li\n                            className=\"s_title p_title list loaded\"\n                            onClick={(e) => this.getData(songsData, index)}\n                          >\n                            <div className=\"playlist-data\">\n                              <div className=\"playlist_thumb\">\n                                <img src={data.songImage} alt=\"song_image\" />\n                              </div>\n                              <div className=\"playlist_thumb_det\">\n                                <span className=\"songs\">{data.songName}</span>\n                              </div>\n                            </div>\n                          </li>\n                          <li\n                            className=\"s_artist p_artist desktop\"\n                            onClick={(e) => this.getData(songsData, index)}\n                          >\n                            <div>\n                              <span className=\"sng_c\">{data.artistName}</span>\n                            </div>\n                          </li>\n                          <li\n                            className=\"s_duration\"\n                            onClick={(e) => this.getData(songsData, index)}\n                          >\n                            <span\n                              className=\"desktop sng_c\"\n                              style={{ width: \"50%\", textAlign: \"center\" }}\n                            >\n                              {data.duration}\n                            </span>\n                          </li>\n                          <li\n                            className=\"s_download-icon\"\n                            onClick={() =>\n                              this.downloadSong(\n                                data._id,\n                                data.songName + \".mp3\"\n                              )\n                            }\n                          >\n                            <span\n                              className=\"sng_c\"\n                              style={{ width: \"90%\", textAlign: \"center\" }}\n                            >\n                              <i\n                                className=\"fas fa-download\"\n                                style={{ fontSize: \"1.3rem\" }}\n                              ></i>\n                            </span>\n                          </li>\n                        </ul>\n                      </li>\n                    );\n                  })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst MapStateToProps = (state) => ({\n  artistDetails: state.home.artistDetails,\n  topCharts: state.home.topCharts,\n  genres: state.home.genresMusic,\n  currentState: state.home.currentData,\n  retroClassics: state.home.retroClassicMusic,\n  activeSongIndex: state.home.activeIndex,\n  downloadUrl: state.home.downloadFile,\n});\n\nexport default connect(MapStateToProps, {\n  artistsDetails,\n  setMusicData,\n  getChartDetails,\n  genresMusic,\n  retroClassic,\n  hideLoader,\n  downloadSong,\n})(ArtistDetails);\n"]},"metadata":{},"sourceType":"module"}