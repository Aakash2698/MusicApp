{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport Sidebar from \"./Components/WrapperComponents/Sidebar/Sidebar\";\nimport Header from \"./Components/WrapperComponents/Header/Header\";\nimport Content from \"./Components/WrapperComponents/Content/Content\";\nimport RightSidebar from \"./Components/WrapperComponents/RightSidebar/RightSidebar\";\nimport FullPageLoader from \"./Components/ReusableComponents/FullPageLoader/FullPageLoader\";\nimport global from \"./global\";\nimport { connect } from \"react-redux\";\nimport { showLoader } from \"./Actions\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      fullWidth: false,\n      scrollTop: 0 // isLoading: true,\n\n    };\n\n    this.onScroll = () => {\n      const scrollTop = this.myRef.current.scrollTop;\n      this.setState({\n        scrollTop: scrollTop\n      });\n    };\n\n    this.handleWidthChange = () => {\n      const {\n        fullWidth\n      } = this.state;\n      this.setState({\n        fullWidth: !fullWidth\n      });\n    };\n  }\n\n  // showLoader = () => {\n  //   this.setState({\n  //     isLoading: true,\n  //   });\n  // };\n  // hideLoader = () => {\n  //   if (this.state.loading !== false) {\n  //     this.setState({\n  //       isLoading: false,\n  //     });\n  //   }\n  // };\n  render() {\n    const {\n      fullWidth,\n      scrollTop,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parent\",\n        ref: this.myRef,\n        onScroll: this.onScroll,\n        children: [this.props.isLoading && /*#__PURE__*/_jsxDEV(FullPageLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Sidebar, {\n            handleWidthChange: this.handleWidthChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: fullWidth ? \"right full-width\" : \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            fullWidth: fullWidth,\n            scrollTop: scrollTop,\n            history: this.props.history\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Content, {\n            fullWidth: fullWidth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightSidebar, {\n          fullWidth: fullWidth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst MapStateToProps = state => ({\n  isLoading: state.auth.isLoading\n});\n\n_c = MapStateToProps;\nexport default connect(MapStateToProps, {\n  showLoader\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapStateToProps\");","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/App.js"],"names":["React","Component","Sidebar","Header","Content","RightSidebar","FullPageLoader","global","connect","showLoader","App","myRef","createRef","state","fullWidth","scrollTop","onScroll","current","setState","handleWidthChange","render","isLoading","props","history","MapStateToProps","auth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gDAApB;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,OAAP,MAAoB,gDAApB;AACA,OAAOC,YAAP,MAAyB,0DAAzB;AACA,OAAOC,cAAP,MAA2B,+DAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,WAA3B;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,gBAClBX,KAAK,CAACY,SAAN,EADkB;AAAA,SAE1BC,KAF0B,GAElB;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,SAAS,EAAE,CAFL,CAGN;;AAHM,KAFkB;;AAAA,SAQ1BC,QAR0B,GAQf,MAAM;AACf,YAAMD,SAAS,GAAG,KAAKJ,KAAL,CAAWM,OAAX,CAAmBF,SAArC;AACA,WAAKG,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAEA;AADC,OAAd;AAGD,KAbyB;;AAAA,SAe1BI,iBAf0B,GAeN,MAAM;AACxB,YAAM;AAAEL,QAAAA;AAAF,UAAgB,KAAKD,KAA3B;AACA,WAAKK,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,CAACA;AADA,OAAd;AAGD,KApByB;AAAA;;AAsB1B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBM,MAAAA;AAAxB,QAAsC,KAAKR,KAAjD;AACA,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,GAAG,EAAE,KAAKF,KAAlC;AAAyC,QAAA,QAAQ,EAAE,KAAKK,QAAxD;AAAA,mBACG,KAAKM,KAAL,CAAWD,SAAX,iBAAwB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAD3B,eAEE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,iBAAiB,EAAE,KAAKF;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAK,UAAA,SAAS,EAAEL,SAAS,GAAG,kBAAH,GAAwB,OAAjD;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,SAAS,EAAEA,SADb;AAEE,YAAA,SAAS,EAAEC,SAFb;AAGE,YAAA,OAAO,EAAE,KAAKO,KAAL,CAAWC;AAHtB;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,OAAD;AAAS,YAAA,SAAS,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAaE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAmBD;;AAxDyB;;AA2D5B,MAAMU,eAAe,GAAIX,KAAD,KAAY;AAClCQ,EAAAA,SAAS,EAAER,KAAK,CAACY,IAAN,CAAWJ;AADY,CAAZ,CAAxB;;KAAMG,e;AAIN,eAAehB,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,GAAzC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Sidebar from \"./Components/WrapperComponents/Sidebar/Sidebar\";\nimport Header from \"./Components/WrapperComponents/Header/Header\";\nimport Content from \"./Components/WrapperComponents/Content/Content\";\nimport RightSidebar from \"./Components/WrapperComponents/RightSidebar/RightSidebar\";\nimport FullPageLoader from \"./Components/ReusableComponents/FullPageLoader/FullPageLoader\";\nimport global from \"./global\";\nimport { connect } from \"react-redux\";\nimport { showLoader } from \"./Actions\";\n\nclass App extends Component {\n  myRef = React.createRef();\n  state = {\n    fullWidth: false,\n    scrollTop: 0,\n    // isLoading: true,\n  };\n\n  onScroll = () => {\n    const scrollTop = this.myRef.current.scrollTop;\n    this.setState({\n      scrollTop: scrollTop,\n    });\n  };\n\n  handleWidthChange = () => {\n    const { fullWidth } = this.state;\n    this.setState({\n      fullWidth: !fullWidth,\n    });\n  };\n\n  // showLoader = () => {\n  //   this.setState({\n  //     isLoading: true,\n  //   });\n  // };\n\n  // hideLoader = () => {\n  //   if (this.state.loading !== false) {\n  //     this.setState({\n  //       isLoading: false,\n  //     });\n  //   }\n  // };\n  render() {\n    const { fullWidth, scrollTop, isLoading } = this.state;\n    return (\n      <>\n        <div className=\"parent\" ref={this.myRef} onScroll={this.onScroll}>\n          {this.props.isLoading && <FullPageLoader />}\n          <div className=\"left\">\n            <Sidebar handleWidthChange={this.handleWidthChange} />\n          </div>\n          <div className={fullWidth ? \"right full-width\" : \"right\"}>\n            <Header\n              fullWidth={fullWidth}\n              scrollTop={scrollTop}\n              history={this.props.history}\n            />\n            <Content fullWidth={fullWidth} />\n          </div>\n          <RightSidebar fullWidth={fullWidth} />\n        </div>\n      </>\n    );\n  }\n}\n\nconst MapStateToProps = (state) => ({\n  isLoading: state.auth.isLoading,\n});\n\nexport default connect(MapStateToProps, { showLoader })(App);\n"]},"metadata":{},"sourceType":"module"}