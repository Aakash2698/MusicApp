{"ast":null,"code":"// import SetAuthToken from \"../utils/SetAuthToken.jsx\";\n// import jwt_decode from \"jwt-decode\";\n// import {\n//   SET_CURRENT_USER,\n//   USER_LOADING,\n//   GET_ERRORS,\n// } from \"../ActionType/ActionType.jsx\";\n//Register user\nexport const registerUser = (userData, history) => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => {\n      console.log(res);\n    }); //   .then((res) => history.push(\"/sign-in\"))\n    //   .catch((err) =>\n    //     dispatch({\n    //       type: GET_ERRORS,\n    //       payload: err.response.data,\n    //     })\n    //   );\n  };\n};\nexport const loginUser = userData => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => {\n      console.log(res); //   res.json().then((json) => {\n      //     const token = json.token;\n      //     localStorage.setItem(\"jwtToken\", token);\n      //     SetAuthToken(token);\n      //     const decoded = jwt_decode(token);\n      //     dispatch(setCurrentUser(decoded));\n      //   });\n    });\n  };\n}; // export const setCurrentUser = (decoded) => {\n//   return {\n//     type: SET_CURRENT_USER,\n//     payload: decoded,\n//   };\n// };\n// export const setUserLoading = () => {\n//   return {\n//     type: USER_LOADING,\n//   };\n// };\n// export const logoutUser = () => (dispatch) => {\n//   localStorage.removeItem(\"jwtToken\");\n//   SetAuthToken(false);\n//   dispatch(setCurrentUser({}));\n// };","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Actions/Auth.jsx"],"names":["registerUser","userData","history","dispatch","url","response","fetch","method","headers","Accept","body","JSON","stringify","then","res","console","log","loginUser"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAO,MAAMA,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACjD,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,GAAG,GAAG,qCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAChCG,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAN0B,KAAN,CAAL,CAOpBY,IAPoB,CAOdC,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATsB,CAAvB,CAFyB,CAYzB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMG,SAAS,GAAIhB,QAAD,IAAc;AACrC,SAAO,MAAOE,QAAP,IAAoB;AACzB,UAAMC,GAAG,GAAG,kCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAChCG,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFuB;AAMhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAN0B,KAAN,CAAL,CAOpBY,IAPoB,CAOdC,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADe,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAhBsB,CAAvB;AAiBD,GAnBD;AAoBD,CArBM,C,CAuBP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import SetAuthToken from \"../utils/SetAuthToken.jsx\";\n// import jwt_decode from \"jwt-decode\";\n\n// import {\n//   SET_CURRENT_USER,\n//   USER_LOADING,\n//   GET_ERRORS,\n// } from \"../ActionType/ActionType.jsx\";\n\n//Register user\nexport const registerUser = (userData, history) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    }).then((res) => {\n      console.log(res);\n    });\n    //   .then((res) => history.push(\"/sign-in\"))\n    //   .catch((err) =>\n    //     dispatch({\n    //       type: GET_ERRORS,\n    //       payload: err.response.data,\n    //     })\n    //   );\n  };\n};\n\nexport const loginUser = (userData) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    }).then((res) => {\n      console.log(res);\n      //   res.json().then((json) => {\n      //     const token = json.token;\n      //     localStorage.setItem(\"jwtToken\", token);\n      //     SetAuthToken(token);\n      //     const decoded = jwt_decode(token);\n      //     dispatch(setCurrentUser(decoded));\n      //   });\n    });\n  };\n};\n\n// export const setCurrentUser = (decoded) => {\n//   return {\n//     type: SET_CURRENT_USER,\n//     payload: decoded,\n//   };\n// };\n\n// export const setUserLoading = () => {\n//   return {\n//     type: USER_LOADING,\n//   };\n// };\n\n// export const logoutUser = () => (dispatch) => {\n//   localStorage.removeItem(\"jwtToken\");\n//   SetAuthToken(false);\n//   dispatch(setCurrentUser({}));\n// };\n"]},"metadata":{},"sourceType":"module"}