{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/Audio/Audio.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Audio.scss\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport songImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport mdPlay from \"@iconify-icons/ion/md-play\";\nimport mdSync from \"@iconify-icons/ion/md-sync\";\nimport musicalNote from \"@iconify-icons/ion/musical-note\";\nimport music from \"../../../Assets/Musics/test.mp3\";\nimport mdVolumeLow from \"@iconify-icons/ion/md-volume-low\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { normalizeUnits } from \"moment\";\nimport { getActiveIndex, downloadSong } from \"../../../Actions\";\nimport logger from \"redux-logger\";\nimport axios from \"axios\";\n\nclass Audio extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dropdownExpand: false,\n      volumeSlider: false,\n      closeAudioControl: false,\n      index: 0,\n      onPlay: \"http://localhost:4000/uploads/1608011825737.mp3\",\n      songName: \"Ek Tarfa(Reprise)\",\n      songArtist: \"Darshan Raval\",\n      songImage: \"http://localhost:4000/uploads/1608114760948.jpg\",\n      songUrl: \"5fe08ecd205bf820e2cf8f1f\",\n      shuffle: false,\n      playSongs: [],\n      prevIndex: [],\n      shuffleIndex: 1,\n      incrementShuffle: 0\n    };\n\n    this.handleDropdownChange = () => {\n      this.setState({\n        dropdownExpand: !this.state.dropdownExpand\n      });\n    };\n\n    this.openVolumeSlider = () => {\n      this.setState({\n        volumeSlider: !this.state.volumeSlider\n      });\n    };\n\n    this.popupActionClick = e => {\n      if (this.node.contains(e.target)) {\n        this.setState({\n          closeAudioControl: true\n        });\n        return true;\n      }\n\n      this.setState({\n        closeAudioControl: false\n      });\n    };\n\n    this.nextSong = () => {\n      if (this.state.shuffle) {\n        const shuffleValue = Math.floor(Math.random(0, this.state.playSongs.length) * 10);\n\n        if (!this.state.prevIndex.includes(shuffleValue)) {\n          this.setState({\n            prevIndex: this.state.prevIndex.concat(shuffleValue)\n          }, () => {\n            this.setState({\n              index: this.state.playSongs[shuffleValue]._id\n            }, () => {\n              var target = this.state.playSongs.find(temp => temp._id == this.state.index);\n              this.setState({\n                onPlay: target.songUrl,\n                songName: target.songName,\n                songArtist: target.artistName,\n                songImage: target.songImage,\n                songUrl: target._id\n              }, () => {\n                this.props.getActiveIndex(this.state.index, this.state.playSongs);\n              });\n            });\n          });\n        }\n      } else {\n        const songIndex = this.state.playSongs.findIndex((element, index) => {\n          if (element._id === this.state.index) {\n            return true;\n          }\n        });\n\n        if (this.state.playSongs.length === songIndex + 1) {\n          this.setState({\n            index: this.state.playSongs[0]._id\n          }, () => {\n            var target = this.state.playSongs.find(temp => temp._id == this.state.index);\n            this.setState({\n              onPlay: target.songUrl,\n              songName: target.songName,\n              songArtist: target.artistName,\n              songImage: target.songImage,\n              songUrl: target._id\n            }, () => {\n              this.props.getActiveIndex(this.state.index, this.state.playSongs);\n            });\n          });\n        } else {\n          let nextIndex;\n          const songIndex = this.state.playSongs.findIndex((element, index) => {\n            if (element._id === this.state.index) {\n              return true;\n            }\n          });\n          nextIndex = this.state.playSongs[songIndex + 1]._id;\n          this.setState({\n            index: nextIndex\n          }, () => {\n            var target = this.state.playSongs.find(temp => temp._id == this.state.index);\n            this.setState({\n              onPlay: target.songUrl,\n              songName: target.songName,\n              songArtist: target.artistName,\n              songImage: target.songImage,\n              songUrl: target._id\n            }, () => {\n              this.props.getActiveIndex(this.state.index, this.state.playSongs);\n            });\n          });\n        }\n      }\n    };\n\n    this.previousSong = () => {\n      if (this.state.shuffle) {\n        this.setState({\n          index: this.state.incrementShuffle\n        }, () => {\n          this.setState({\n            onPlay: this.state.playSongs[this.state.prevIndex[this.state.index]].songUrl,\n            songName: this.state.playSongs[this.state.prevIndex[this.state.index]].songName,\n            songArtist: this.state.playSongs[this.state.prevIndex[this.state.index]].artistName,\n            songImage: this.state.playSongs[this.state.prevIndex[this.state.index]].songImage,\n            songUrl: this.state.playSongs[this.state.prevIndex[this.state.index]]._id\n          }, () => {\n            this.props.getActiveIndex(this.state.prevIndex[this.state.index], this.state.playSongs);\n\n            if (this.state.incrementShuffle < this.state.prevIndex.length - 1) {\n              this.setState({\n                incrementShuffle: this.state.incrementShuffle + 1\n              });\n            }\n          });\n        });\n      } else {\n        if (this.state.index === this.state.playSongs[0]._id) {\n          this.setState({\n            index: this.state.playSongs[0]._id\n          }, () => {\n            var target = this.state.playSongs.find(temp => temp._id == this.state.index);\n            this.setState({\n              onPlay: target.songUrl,\n              songName: target.songName,\n              songArtist: target.artistName,\n              songImage: target.songImage,\n              songUrl: target._id\n            }, () => {\n              this.props.getActiveIndex(this.state.index, this.state.playSongs);\n            });\n          });\n        } else {\n          let nextIndex;\n          const songIndex = this.state.playSongs.findIndex((element, index) => {\n            if (element._id === this.state.index) {\n              return true;\n            }\n          });\n          nextIndex = this.state.playSongs[songIndex - 1]._id;\n          this.setState({\n            index: nextIndex\n          }, () => {\n            var target = this.state.playSongs.find(temp => temp._id == this.state.index);\n            this.setState({\n              onPlay: target.songUrl,\n              songName: target.songName,\n              songArtist: target.artistName,\n              songImage: target.songImage,\n              songUrl: target._id\n            }, () => {\n              this.props.getActiveIndex(this.state.index, this.state.playSongs);\n            });\n          });\n        }\n      }\n    };\n\n    this.shuffleStart = () => {\n      this.setState({\n        shuffle: !this.state.shuffle\n      });\n    };\n\n    this.downloadSong = () => {\n      const url = \"http://localhost:4000/songs/download/\" + this.state.songUrl;\n      axios.get(url, {\n        responseType: \"blob\",\n        headers: {\n          Accept: \"*/*\",\n          \"Content-Type\": \"audio/mpeg\"\n        }\n      }).then(res => {\n        // fileDownload(res.data, filename);\n        let url = window.URL.createObjectURL(res.data);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.songName + \".mp3\";\n        a.click();\n      });\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps, \"1010101\");\n\n    if (nextProps.currentIndex) {// console.log(\"INININININ\");\n      // this.setState(\n      //   {\n      //     playSongs: nextProps.currentSongData,\n      //     index: nextProps.currentIndex,\n      //   },\n      //   () => {\n      //     var target = nextProps.currentSongData.find(\n      //       (temp) => temp._id == this.state.index\n      //     );\n      //     this.setState(\n      //       {\n      //         onPlay: target.songUrl,\n      //         songName: target.songName,\n      //         songArtist: target.artistName,\n      //         songImage: target.songImage,\n      //         songUrl: target._id,\n      //       },\n      //       () => {\n      //         this.props.getActiveIndex(this.state.index, this.state.playSongs);\n      //       }\n      //     );\n      //   }\n      // );\n    } else {\n      console.log(\"OUOUTOUTOUT\");\n      console.log(this.state.playSongs);\n      this.setState({\n        playSongs: nextProps.currentSongData,\n        index: nextProps.currentSongData[0]._id\n      }, () => {\n        var target = nextProps.currentSongData.find(temp => temp._id == this.state.index);\n        console.log(target);\n        this.setState({\n          onPlay: target.songUrl,\n          songName: target.songName,\n          songArtist: target.artistName,\n          songImage: target.songImage,\n          songUrl: target._id\n        }, () => {\n          this.props.getActiveIndex(this.state.index, this.state.playSongs);\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      dropdownExpand,\n      volumeSlider,\n      onPlay,\n      songName,\n      songArtist,\n      songImage,\n      closeAudioControl,\n      loopSong,\n      shuffle\n    } = this.state;\n    const loop = loopSong;\n    const fullWidth = this.props;\n    let audioClass;\n\n    if (fullWidth.fullWidth) {\n      audioClass = \"audioPlayer long-player\";\n    } else {\n      audioClass = \"audioPlayer\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: audioClass,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: songImage,\n            alt: \"song-image\",\n            className: \"song-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info pl-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-title\",\n            children: songName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-artist\",\n            children: songArtist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-controls--left d-flex mr-auto\",\n          children: /*#__PURE__*/_jsxDEV(AudioPlayer, {\n            loop: loop,\n            src: onPlay,\n            onClickNext: this.nextSong,\n            onClickPrevious: this.previousSong // autoPlay={true}\n            ,\n            showSkipControls: true,\n            showJumpControls: false,\n            customProgressBarSection: [RHAP_UI.PROGRESS_BAR],\n            customVolumeControls: [closeAudioControl && volumeSlider ? RHAP_UI.VOLUME : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n              ref: node => this.node = node,\n              className: \"btn btn-icon-only\",\n              onClick: this.openVolumeSlider,\n              style: {\n                position: \"absolute\",\n                right: \"105px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"iconify audio-player-icon\",\n                \"data-icon\": \"ion-md-volume-low\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this)],\n            customControlsSection: [RHAP_UI.LOOP, RHAP_UI.MAIN_CONTROLS, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon-only amplitude-shuffle amplitude-shuffle-on\",\n              onClick: this.shuffleStart,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"audio-player-icon iconify\",\n                \"data-icon\": \"ion-md-shuffle\",\n                \"data-inline\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), RHAP_UI.CURRENT_TIME, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"or-arrow\",\n              children: \" / \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), RHAP_UI.DURATION, RHAP_UI.VOLUME_CONTROLS]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropleft\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon-only\",\n            onClick: () => this.downloadSong(),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"white\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-download\",\n                style: {\n                  fontSize: \"1.3rem\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-icon-only\",\n          onClick: this.props.handleOpenSidebar,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            className: \"music-icon\",\n            icon: musicalNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentSongData: state.home.songData,\n  currentIndex: state.home.index,\n  queue: state.home.queueSongs\n});\n\nexport default connect(mapStateToProps, {\n  getActiveIndex,\n  downloadSong\n})(Audio);","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/Components/WrapperComponents/Audio/Audio.jsx"],"names":["React","Component","AudioPlayer","RHAP_UI","ReactAudioPlayer","songImage","Icon","InlineIcon","mdPlay","mdSync","musicalNote","music","mdVolumeLow","ActionPopover","connect","normalizeUnits","getActiveIndex","downloadSong","logger","axios","Audio","state","dropdownExpand","volumeSlider","closeAudioControl","index","onPlay","songName","songArtist","songUrl","shuffle","playSongs","prevIndex","shuffleIndex","incrementShuffle","handleDropdownChange","setState","openVolumeSlider","popupActionClick","e","node","contains","target","nextSong","shuffleValue","Math","floor","random","length","includes","concat","_id","find","temp","artistName","props","songIndex","findIndex","element","nextIndex","previousSong","shuffleStart","url","get","responseType","headers","Accept","then","res","window","URL","createObjectURL","data","a","document","createElement","href","download","click","componentWillMount","addEventListener","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","console","log","currentIndex","currentSongData","render","loopSong","loop","fullWidth","audioClass","PROGRESS_BAR","VOLUME","position","right","LOOP","MAIN_CONTROLS","CURRENT_TIME","DURATION","VOLUME_CONTROLS","color","fontSize","handleOpenSidebar","mapStateToProps","home","songData","queue","queueSongs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Audio.scss\";\nimport AudioPlayer, { RHAP_UI } from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport songImage from \"../../../Assets/image/sliderImage/1.jpg\";\nimport { Icon, InlineIcon } from \"@iconify/react\";\nimport mdPlay from \"@iconify-icons/ion/md-play\";\nimport mdSync from \"@iconify-icons/ion/md-sync\";\nimport musicalNote from \"@iconify-icons/ion/musical-note\";\nimport music from \"../../../Assets/Musics/test.mp3\";\nimport mdVolumeLow from \"@iconify-icons/ion/md-volume-low\";\nimport ActionPopover from \"../../ReusableComponents/ActionPopover/ActionPopover\";\nimport { connect } from \"react-redux\";\nimport { normalizeUnits } from \"moment\";\nimport { getActiveIndex, downloadSong } from \"../../../Actions\";\nimport logger from \"redux-logger\";\nimport axios from \"axios\";\n\nclass Audio extends Component {\n  state = {\n    dropdownExpand: false,\n    volumeSlider: false,\n    closeAudioControl: false,\n    index: 0,\n    onPlay: \"http://localhost:4000/uploads/1608011825737.mp3\",\n    songName: \"Ek Tarfa(Reprise)\",\n    songArtist: \"Darshan Raval\",\n    songImage: \"http://localhost:4000/uploads/1608114760948.jpg\",\n    songUrl: \"5fe08ecd205bf820e2cf8f1f\",\n    shuffle: false,\n    playSongs: [],\n    prevIndex: [],\n    shuffleIndex: 1,\n    incrementShuffle: 0,\n  };\n\n  handleDropdownChange = () => {\n    this.setState({\n      dropdownExpand: !this.state.dropdownExpand,\n    });\n  };\n  openVolumeSlider = () => {\n    this.setState({\n      volumeSlider: !this.state.volumeSlider,\n    });\n  };\n  componentWillMount() {\n    document.addEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.popupActionClick, false);\n  }\n  popupActionClick = (e) => {\n    if (this.node.contains(e.target)) {\n      this.setState({\n        closeAudioControl: true,\n      });\n      return true;\n    }\n    this.setState({\n      closeAudioControl: false,\n    });\n  };\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps, \"1010101\");\n\n    if (nextProps.currentIndex) {\n      // console.log(\"INININININ\");\n      // this.setState(\n      //   {\n      //     playSongs: nextProps.currentSongData,\n      //     index: nextProps.currentIndex,\n      //   },\n      //   () => {\n      //     var target = nextProps.currentSongData.find(\n      //       (temp) => temp._id == this.state.index\n      //     );\n      //     this.setState(\n      //       {\n      //         onPlay: target.songUrl,\n      //         songName: target.songName,\n      //         songArtist: target.artistName,\n      //         songImage: target.songImage,\n      //         songUrl: target._id,\n      //       },\n      //       () => {\n      //         this.props.getActiveIndex(this.state.index, this.state.playSongs);\n      //       }\n      //     );\n      //   }\n      // );\n    } else {\n      console.log(\"OUOUTOUTOUT\");\n\n      console.log(this.state.playSongs);\n      this.setState(\n        {\n          playSongs: nextProps.currentSongData,\n          index: nextProps.currentSongData[0]._id,\n        },\n        () => {\n          var target = nextProps.currentSongData.find(\n            (temp) => temp._id == this.state.index\n          );\n          console.log(target);\n\n          this.setState(\n            {\n              onPlay: target.songUrl,\n              songName: target.songName,\n              songArtist: target.artistName,\n              songImage: target.songImage,\n              songUrl: target._id,\n            },\n            () => {\n              this.props.getActiveIndex(this.state.index, this.state.playSongs);\n            }\n          );\n        }\n      );\n    }\n  }\n\n  nextSong = () => {\n    if (this.state.shuffle) {\n      const shuffleValue = Math.floor(\n        Math.random(0, this.state.playSongs.length) * 10\n      );\n      if (!this.state.prevIndex.includes(shuffleValue)) {\n        this.setState(\n          {\n            prevIndex: this.state.prevIndex.concat(shuffleValue),\n          },\n          () => {\n            this.setState(\n              {\n                index: this.state.playSongs[shuffleValue]._id,\n              },\n\n              () => {\n                var target = this.state.playSongs.find(\n                  (temp) => temp._id == this.state.index\n                );\n\n                this.setState(\n                  {\n                    onPlay: target.songUrl,\n                    songName: target.songName,\n                    songArtist: target.artistName,\n                    songImage: target.songImage,\n                    songUrl: target._id,\n                  },\n                  () => {\n                    this.props.getActiveIndex(\n                      this.state.index,\n                      this.state.playSongs\n                    );\n                  }\n                );\n              }\n            );\n          }\n        );\n      }\n    } else {\n      const songIndex = this.state.playSongs.findIndex((element, index) => {\n        if (element._id === this.state.index) {\n          return true;\n        }\n      });\n      if (this.state.playSongs.length === songIndex + 1) {\n        this.setState(\n          {\n            index: this.state.playSongs[0]._id,\n          },\n          () => {\n            var target = this.state.playSongs.find(\n              (temp) => temp._id == this.state.index\n            );\n            this.setState(\n              {\n                onPlay: target.songUrl,\n                songName: target.songName,\n                songArtist: target.artistName,\n                songImage: target.songImage,\n                songUrl: target._id,\n              },\n              () => {\n                this.props.getActiveIndex(\n                  this.state.index,\n                  this.state.playSongs\n                );\n              }\n            );\n          }\n        );\n      } else {\n        let nextIndex;\n        const songIndex = this.state.playSongs.findIndex((element, index) => {\n          if (element._id === this.state.index) {\n            return true;\n          }\n        });\n        nextIndex = this.state.playSongs[songIndex + 1]._id;\n\n        this.setState(\n          {\n            index: nextIndex,\n          },\n          () => {\n            var target = this.state.playSongs.find(\n              (temp) => temp._id == this.state.index\n            );\n            this.setState(\n              {\n                onPlay: target.songUrl,\n                songName: target.songName,\n                songArtist: target.artistName,\n                songImage: target.songImage,\n                songUrl: target._id,\n              },\n              () => {\n                this.props.getActiveIndex(\n                  this.state.index,\n                  this.state.playSongs\n                );\n              }\n            );\n          }\n        );\n      }\n    }\n  };\n\n  previousSong = () => {\n    if (this.state.shuffle) {\n      this.setState(\n        {\n          index: this.state.incrementShuffle,\n        },\n        () => {\n          this.setState(\n            {\n              onPlay: this.state.playSongs[\n                this.state.prevIndex[this.state.index]\n              ].songUrl,\n              songName: this.state.playSongs[\n                this.state.prevIndex[this.state.index]\n              ].songName,\n              songArtist: this.state.playSongs[\n                this.state.prevIndex[this.state.index]\n              ].artistName,\n              songImage: this.state.playSongs[\n                this.state.prevIndex[this.state.index]\n              ].songImage,\n              songUrl: this.state.playSongs[\n                this.state.prevIndex[this.state.index]\n              ]._id,\n            },\n            () => {\n              this.props.getActiveIndex(\n                this.state.prevIndex[this.state.index],\n                this.state.playSongs\n              );\n              if (\n                this.state.incrementShuffle <\n                this.state.prevIndex.length - 1\n              ) {\n                this.setState({\n                  incrementShuffle: this.state.incrementShuffle + 1,\n                });\n              }\n            }\n          );\n        }\n      );\n    } else {\n      if (this.state.index === this.state.playSongs[0]._id) {\n        this.setState(\n          {\n            index: this.state.playSongs[0]._id,\n          },\n          () => {\n            var target = this.state.playSongs.find(\n              (temp) => temp._id == this.state.index\n            );\n            this.setState(\n              {\n                onPlay: target.songUrl,\n                songName: target.songName,\n                songArtist: target.artistName,\n                songImage: target.songImage,\n                songUrl: target._id,\n              },\n              () => {\n                this.props.getActiveIndex(\n                  this.state.index,\n                  this.state.playSongs\n                );\n              }\n            );\n          }\n        );\n      } else {\n        let nextIndex;\n        const songIndex = this.state.playSongs.findIndex((element, index) => {\n          if (element._id === this.state.index) {\n            return true;\n          }\n        });\n        nextIndex = this.state.playSongs[songIndex - 1]._id;\n        this.setState(\n          {\n            index: nextIndex,\n          },\n          () => {\n            var target = this.state.playSongs.find(\n              (temp) => temp._id == this.state.index\n            );\n            this.setState(\n              {\n                onPlay: target.songUrl,\n                songName: target.songName,\n                songArtist: target.artistName,\n                songImage: target.songImage,\n                songUrl: target._id,\n              },\n              () => {\n                this.props.getActiveIndex(\n                  this.state.index,\n                  this.state.playSongs\n                );\n              }\n            );\n          }\n        );\n      }\n    }\n  };\n\n  shuffleStart = () => {\n    this.setState({\n      shuffle: !this.state.shuffle,\n    });\n  };\n\n  downloadSong = () => {\n    const url = \"http://localhost:4000/songs/download/\" + this.state.songUrl;\n\n    axios\n      .get(url, {\n        responseType: \"blob\",\n        headers: {\n          Accept: \"*/*\",\n          \"Content-Type\": \"audio/mpeg\",\n        },\n      })\n      .then((res) => {\n        // fileDownload(res.data, filename);\n        let url = window.URL.createObjectURL(res.data);\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = this.state.songName + \".mp3\";\n        a.click();\n      });\n  };\n\n  render() {\n    const {\n      dropdownExpand,\n      volumeSlider,\n      onPlay,\n      songName,\n      songArtist,\n      songImage,\n      closeAudioControl,\n      loopSong,\n      shuffle,\n    } = this.state;\n    const loop = loopSong;\n    const fullWidth = this.props;\n\n    let audioClass;\n    if (fullWidth.fullWidth) {\n      audioClass = \"audioPlayer long-player\";\n    } else {\n      audioClass = \"audioPlayer\";\n    }\n    return (\n      <div className={audioClass}>\n        <div className=\"audio\">\n          <div className=\"song-image\">\n            <img src={songImage} alt=\"song-image\" className=\"song-img\" />\n          </div>\n          <div className=\"song-info pl-3\">\n            <span className=\"song-title\">{songName}</span>\n            <span className=\"song-artist\">{songArtist}</span>\n          </div>\n        </div>\n        <div className=\"audio-controls\">\n          <div className=\"audio-controls--left d-flex mr-auto\">\n            <AudioPlayer\n              loop={loop}\n              src={onPlay}\n              onClickNext={this.nextSong}\n              onClickPrevious={this.previousSong}\n              // autoPlay={true}\n              showSkipControls={true}\n              showJumpControls={false}\n              customProgressBarSection={[RHAP_UI.PROGRESS_BAR]}\n              customVolumeControls={[\n                closeAudioControl && volumeSlider ? RHAP_UI.VOLUME : \"\",\n                <button\n                  ref={(node) => (this.node = node)}\n                  className=\"btn btn-icon-only\"\n                  onClick={this.openVolumeSlider}\n                  style={{ position: \"absolute\", right: \"105px\" }}\n                >\n                  <span\n                    className=\"iconify audio-player-icon\"\n                    data-icon=\"ion-md-volume-low\"\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n              ]}\n              customControlsSection={[\n                RHAP_UI.LOOP,\n                RHAP_UI.MAIN_CONTROLS,\n                <button\n                  className=\"btn btn-icon-only amplitude-shuffle amplitude-shuffle-on\"\n                  onClick={this.shuffleStart}\n                >\n                  <span\n                    className={\"audio-player-icon iconify\"}\n                    data-icon=\"ion-md-shuffle\"\n                    data-inline=\"false\"\n                  ></span>\n                </button>,\n\n                RHAP_UI.CURRENT_TIME,\n                <div className=\"or-arrow\"> / </div>,\n                RHAP_UI.DURATION,\n                RHAP_UI.VOLUME_CONTROLS,\n              ]}\n            />\n          </div>\n        </div>\n        <div className=\"audio-info\">\n          <div className=\"dropleft\">\n            <button\n              className=\"btn btn-icon-only\"\n              onClick={() => this.downloadSong()}\n            >\n              <span style={{ color: \"white\" }}>\n                <i class=\"fas fa-download\" style={{ fontSize: \"1.3rem\" }}></i>\n              </span>\n              {/* <span\n                className=\"iconify audio-player-icon\"\n                data-icon=\"bx:bxs-download\"\n                data-inline=\"false\"\n              ></span> */}\n            </button>\n            {/* <button\n              className=\"btn btn-icon-only\"\n              onClick={this.handleDropdownChange}\n            >\n              <span\n                className=\"iconify audio-player-icon\"\n                data-icon=\"fe:elipsis-v\"\n                data-inline=\"false\"\n              ></span>\n            </button>\n            <ActionPopover\n              dropdownExpand={dropdownExpand}\n              transform=\"translate3d(-162px, -143px, 0px)\"\n            /> */}\n          </div>\n          <button\n            className=\"btn btn-icon-only\"\n            onClick={this.props.handleOpenSidebar}\n          >\n            <Icon className=\"music-icon\" icon={musicalNote} />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentSongData: state.home.songData,\n  currentIndex: state.home.index,\n  queue: state.home.queueSongs,\n});\n\nexport default connect(mapStateToProps, { getActiveIndex, downloadSong })(\n  Audio\n);\n"]},"metadata":{},"sourceType":"module"}