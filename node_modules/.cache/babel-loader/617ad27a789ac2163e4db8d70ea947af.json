{"ast":null,"code":"import{createStore,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{createLogger}from\"redux-logger\";import{composeWithDevTools}from\"redux-devtools-extension\";import reducer from\"./Reducers\";import Api from\"./service_api/index\";// confi;\n// const composeEnhancers = composeWithDevTools({\n//     realtime: true\n// });\nvar middlewares=[thunk.withExtraArgument(Api)];// if (process.env.NODE_ENV !== \"production\") {\n//   middlewares.push(\n//     createLogger({\n//       colors: {\n//         title: () => \"inherit\",\n//         prevState: () => \"red\",\n//         action: () => \"#03A9F4\",\n//         nextState: () => \"#4CAF50\",\n//         error: () => \"#F20404\",\n//       },\n//     })\n//   );\n// }\n// const store = createStore(reducer, composeEnhancers(applyMiddleware(...middlewares)));\n// const store = createStore(reducer, applyMiddleware(...middlewares));\nvar store=createStore(reducer,composeWithDevTools(applyMiddleware.apply(void 0,middlewares)// other store enhancers if any\n));export default store;","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/MusicApp/src/configStore.js"],"names":["createStore","applyMiddleware","thunk","createLogger","composeWithDevTools","reducer","Api","middlewares","withExtraArgument","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,WAAW,CAAG,CAACL,KAAK,CAACM,iBAAN,CAAwBF,GAAxB,CAAD,CAApB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,GAAMG,CAAAA,KAAK,CAAGT,WAAW,CACvBK,OADuB,CAEvBD,mBAAmB,CACjBH,eAAe,MAAf,QAAmBM,WAAnB,CACA;AAFiB,CAFI,CAAzB,CAOA,cAAeE,CAAAA,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"./Reducers\";\nimport Api from \"./service_api/index\";\n// confi;\n// const composeEnhancers = composeWithDevTools({\n//     realtime: true\n// });\n\nconst middlewares = [thunk.withExtraArgument(Api)];\n// if (process.env.NODE_ENV !== \"production\") {\n//   middlewares.push(\n//     createLogger({\n//       colors: {\n//         title: () => \"inherit\",\n//         prevState: () => \"red\",\n//         action: () => \"#03A9F4\",\n//         nextState: () => \"#4CAF50\",\n//         error: () => \"#F20404\",\n//       },\n//     })\n//   );\n// }\n\n// const store = createStore(reducer, composeEnhancers(applyMiddleware(...middlewares)));\n// const store = createStore(reducer, applyMiddleware(...middlewares));\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(...middlewares)\n    // other store enhancers if any\n  )\n);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}