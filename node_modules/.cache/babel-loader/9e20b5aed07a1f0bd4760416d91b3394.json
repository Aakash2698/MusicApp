{"ast":null,"code":"import SetAuthToken from \"../Utils/SetAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport history from \"../history\";\nimport { SET_CURRENT_USER, USER_LOADING, GET_ERRORS } from \"../ActionTypes/ActionTypes.jsx\";\nexport const registerUser = (userData, history) => {\n  return async dispatch => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => history.push(\"/home-page\")).catch(err => dispatch({\n      type: GET_ERRORS,\n      payload: err\n    }));\n    return err;\n  };\n}; // export const loginUser = (userData) => {\n//   return async (dispatch) => {\n//     const api = \"http://localhost:4000/user/login\";\n//     fetch(api, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(userData),\n//     })\n//       .then((res) => {\n//         console.log(res);\n//         return res;\n//       })\n//       // .then((response) => response.json())\n//       // .then((response) => {\n//       //   console.log(typeof response);\n//       //   // console.log(response);\n//       //   // return response;\n//       // })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n// };\n// export const loginUser = (userData) => {\n//   return async (dispatch) => {\n//     const url = \"http://localhost:4000/user/login\";\n//     await fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(userData),\n//     }).then((res) => {\n//       console.log(\"RES\", res);\n//       res.json().then((json) => {\n//         console.log(\"res\", json);\n//         if (json.token) {\n//           const token = json.token;\n//           localStorage.setItem(\"jwtToken\", token);\n//           SetAuthToken(token);\n//           const decoded = jwt_decode(token);\n//           dispatch(setCurrentUser(decoded));\n//           history.push({\n//             pathname: \"/home\",\n//           });\n//         }\n//       });\n//     });\n//   };\n// };\n\nexport const loginUser = payload => (dispatch, getState, Api) => {\n  return Api.post(\"login\", payload, \"header\").then(res => {\n    if (res.response.status === 201) {\n      const token = res.responseData.token;\n      console.log(token);\n      localStorage.setItem(\"jwtToken\", token);\n      SetAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded)); // history.push({\n      //   pathname: \"/home\",\n      // });\n      // dispatch(loginSuccess(res.responseData.response_data));\n    }\n\n    return res;\n  });\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  SetAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\nexport const logoutSuccess = () => {\n  // global.check_Auth(history);\n  localStorage.clear();\n  history.push(\"/login\"); // logoutFirebase();\n\n  return {\n    type: LOGOUT\n  };\n};","map":{"version":3,"sources":["/Users/akashsuryavanshi/Dropbox/My Mac (Akashs-iMac.local)/Documents/Tunex Workspace/Git Repo/music-app/src/Actions/Auth.jsx"],"names":["SetAuthToken","jwt_decode","history","SET_CURRENT_USER","USER_LOADING","GET_ERRORS","registerUser","userData","dispatch","url","response","fetch","method","headers","Accept","body","JSON","stringify","then","res","push","catch","err","type","payload","loginUser","getState","Api","post","status","token","responseData","console","log","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem","logoutSuccess","clear","LOGOUT"],"mappings":"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","sourcesContent":["import SetAuthToken from \"../Utils/SetAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport history from \"../history\";\n\nimport {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  GET_ERRORS,\n} from \"../ActionTypes/ActionTypes.jsx\";\n\nexport const registerUser = (userData, history) => {\n  return async (dispatch) => {\n    const url = \"http://localhost:4000/user/register\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    })\n      .then((res) => history.push(\"/home-page\"))\n      .catch((err) =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err,\n        })\n      );\n    return err;\n  };\n};\n\n// export const loginUser = (userData) => {\n//   return async (dispatch) => {\n//     const api = \"http://localhost:4000/user/login\";\n//     fetch(api, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(userData),\n//     })\n//       .then((res) => {\n//         console.log(res);\n//         return res;\n//       })\n\n//       // .then((response) => response.json())\n//       // .then((response) => {\n//       //   console.log(typeof response);\n\n//       //   // console.log(response);\n//       //   // return response;\n//       // })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n// };\n\n// export const loginUser = (userData) => {\n//   return async (dispatch) => {\n//     const url = \"http://localhost:4000/user/login\";\n//     await fetch(url, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(userData),\n//     }).then((res) => {\n//       console.log(\"RES\", res);\n//       res.json().then((json) => {\n//         console.log(\"res\", json);\n//         if (json.token) {\n//           const token = json.token;\n//           localStorage.setItem(\"jwtToken\", token);\n//           SetAuthToken(token);\n//           const decoded = jwt_decode(token);\n//           dispatch(setCurrentUser(decoded));\n//           history.push({\n//             pathname: \"/home\",\n//           });\n//         }\n//       });\n//     });\n//   };\n// };\n\nexport const loginUser = (payload) => (dispatch, getState, Api) => {\n  return Api.post(\"login\", payload, \"header\").then((res) => {\n    if (res.response.status === 201) {\n      const token = res.responseData.token;\n      console.log(token);\n      localStorage.setItem(\"jwtToken\", token);\n      SetAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n      // history.push({\n      //   pathname: \"/home\",\n      // });\n      // dispatch(loginSuccess(res.responseData.response_data));\n    }\n    return res;\n  });\n};\n\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  SetAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n\nexport const logoutSuccess = () => {\n  // global.check_Auth(history);\n  localStorage.clear();\n  history.push(\"/login\");\n  // logoutFirebase();\n  return {\n    type: LOGOUT,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}